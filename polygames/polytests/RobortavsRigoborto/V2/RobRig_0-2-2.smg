//Since PRISM does not support arrays we use directly the constants as defined below:
// Q_TERRAIN[0][0] = 0.42221092576252406
// Q_TERRAIN[0][1] = 0.37897720147015124
// F_SLOPE[0][0] =  -0.15885683833831
// F_SLOPE[0][1] =  -0.4821664994140733
// S_SLOPE[0][0]   =  0.02254944273721704
// S_SLOPE[0][1]   =  -0.19013172509917142
smg
player p1
   roborta, [robl], [robr], [robf], [robb]
endplayer

player p2
  rigoborto, [rigl], [rigr], [rigf], [rigb]
endplayer

const int LENGTH = 2;
global sched : [0..1] init 0;

// In this case Roborta is a minimizer she wants to reach the exit asap
// on the other hand Rigoborto wants to maximize, that is to stop Roborta.
rewards "r0"
    Collision : 10;
    !Collision & robrow < LENGTH : 1;
    !Collision & robrow = LENGTH : 0;
endrewards
                  
// Roborta and Rigoborto occupy the same cell producing a collision
    formula Collision = (robcol = rigcol) & (robrow = rigrow);

// Roborta reached the end fo the grid
    formula Robwins =  (robrow = LENGTH);

// Module for Roborta, in case a collision the games finishes
module roborta
    robcol : [0..1] init 0;
    robrow : [0..2] init 0;
    [robl] (sched = 0) & (robrow = 0) & (robcol = 0) & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 1) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robcol' = 0) & (sched' = 1)            // Command successful
        {
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.4888770002894749,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        1 * pl + (- 0.5647602525937684 * pr) >= 0,
        0.977450557262783 * pr + (- 0.5777890742374759 * pl) >= 0,
        1 * pf + (- 0.4860033286776914 * pb) >= 0,
        0.84114316166169 * pb + (- 0.5777890742374759 * pf) >= 0
        };
    [robr] (sched = 0) & robrow = 0 & robrow = 0 & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 1) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robcol' = 1) & (sched' = 1)     // Command successful
        {    
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.4888770002894749,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        1 * pl + (- 0.5647602525937684 * pr) >= 0,
        0.977450557262783 * pr + (- 0.5777890742374759 * pl) >= 0,
        1 * pf + (- 0.4860033286776914 * pb) >= 0,
        0.84114316166169 * pb + (- 0.6695748197972604 * pf) >= 0 
        };
        [robf] (sched = 0) &  (robrow = 0) & (robrow = 0)  & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 1) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robrow' = 1) & (sched' = 1)                   // Command successful 
        {
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.4888770002894749,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        1 * pl + (- 0.5647602525937684 * pr) >= 0,
        0.977450557262783 * pr + (-0.5777890742374759 * pl) >= 0,
        1 * pf + (-0.4860033286776914 * pb) >= 0,
        0.84114316166169 * pb + (-0.5777890742374759 * pf) >= 0 
        };

        [robb] (sched = 0) &  (robrow = 0) & (robrow = 0)  & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 1) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robrow' = 1) & (sched' = 1)           // Command successful
        {
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.4888770002894749,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        1 * pl + (- 0.5647602525937684 * pr) >= 0,
        0.977450557262783 * pr + (- 0.5777890742374759 * pl) >= 0,
        1 * pf + (- 0.4860033286776914 * pb) >= 0,
        0.84114316166169 * pb + (- 0.5777890742374759 * pf) >= 0
        };
    [robl] (sched = 0) & (robrow = 1) & (robcol = 0) & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 2) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robcol' = 0) & (sched' = 1)            // Command successful
        {
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.3307112604325396,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
        1 * pr + (- 0.5029466625194534 * pl) >= 0,
        1 * pf + (- 0.32158640970638025 * pb) >= 0,
        0.5178335005859267 * pb + (- 0.6210227985298488 * pf) >= 0
        };
    [robr] (sched = 0) & robrow = 1 & robrow = 0 & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 2) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robcol' = 1) & (sched' = 1)     // Command successful
        {    
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.3307112604325396,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
        1 * pr + (- 0.5029466625194534 * pl) >= 0,
        1 * pf + (- 0.32158640970638025 * pb) >= 0,
        0.5178335005859267 * pb + (- 0.9204591873533172 * pf) >= 0 
        };
        [robf] (sched = 0) &  (robrow = 1) & (robrow = 0)  & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 2) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robrow' = 2) & (sched' = 1)                   // Command successful 
        {
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.3307112604325396,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
        1 * pr + (-0.5029466625194534 * pl) >= 0,
        1 * pf + (-0.32158640970638025 * pb) >= 0,
        0.5178335005859267 * pb + (-0.6210227985298488 * pf) >= 0 
        };

        [robb] (sched = 0) &  (robrow = 1) & (robrow = 0)  & !Collision  -U->
        pl : (robcol' = 0) & (sched' = 1) +         // The first four probabilistic options
        pr : (robcol' = 1) & (sched' = 1) +   // corresponds to environments setbacks
        pf : (robrow' = 2) & (sched' = 1) +
        pb : (robrow' = 0) & (sched' = 1) +
        pm : (robrow' = 2) & (sched' = 1)           // Command successful
        {
        // Success is affected by the quality and inclination of the terrain
        pm <= 0.3307112604325396,
        // The following are the conditions for the probabilities of sideways and frontal displacements
        0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
        1 * pr + (- 0.5029466625194534 * pl) >= 0,
        1 * pf + (- 0.32158640970638025 * pb) >= 0,
        0.5178335005859267 * pb + (- 0.6210227985298488 * pf) >= 0
        };
endmodule
 // Module for Rigoborto, in case a collision the games finishes
            module rigoborto
            rigcol : [0..1] init 1;
            rigrow : [0..2] init 1;
            
                [rigl] (sched = 1) & (robrow = 0) & (robrow = 0) & !Collision  -U->
                pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
                pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
                pf : (rigrow' = 1) & (sched' = 0) +
                pb : (rigrow' = 0) & (sched' = 0) +
                pm : (rigcol' = 0) & (sched' = 0)            // Command successful
                {

                // Success is affected by the quality and inclination of the terrain
	            pm <= 0.4888770002894749,
	            // The following are the conditions for the probabilities of sideways and frontal displacements
	            1 * pl + (- 0.5647602525937684 * pr) >= 0,
	            0.977450557262783 * pr + (- 0.5777890742374759 * pl) >= 0,
	            1 * pf + (- 0.4860033286776914 * pb) >= 0,
	            0.84114316166169 * pb + (- 0.5777890742374759 * pf) >= 0 
            }; 
                [rigr] (sched = 1) & (robrow = 0) & (robrow = 0) & !Collision  -U->
                pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
                pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
                pf : (rigrow' = 1) & (sched' = 0) +
                pb : (rigrow' = 0) & (sched' = 0) +
                pm : (rigcol' = 1) & (sched' = 0)     // Command successful 
                {
 
                // Success is affected by the quality and inclination of the terrain
	            pm <= 0.4888770002894749,
	            // The following are the conditions for the probabilities of sideways and frontal displacements
	            1 * pl + (- 0.5647602525937684 * pr) >= 0,
	            0.977450557262783 * pr + (- 0.5777890742374759 * pl) >= 0,
	            1 * pf + (- 0.4860033286776914 * pb) >= 0,
	            0.84114316166169 * pb + (- 0.5777890742374759 * pf) >= 0
                };

            [rigf] (sched = 1) & !Collision  -U->
            pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
            pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
            pf : (rigrow' = 1) & (sched' = 0) +
            pb : (rigrow' = 0) & (sched' = 0) +
            pm : (rigrow' = 1) & (sched' = 0)    // Command successful
            {
            // Success is affected by the quality and inclination of the terrain
	        pm <= 0.4888770002894749,
	        // The following are the conditions for the probabilities of sideways and frontal displacements
	        1 * pl + (- 0.5647602525937684 * pr) >= 0,
	        0.977450557262783 * pr + (- 0.5777890742374759 * pl) >= 0,
	        1 * pf + (- 0.4860033286776914 * pb) >= 0,
	        0.84114316166169 * pb + (- 0.5777890742374759 * pf) >= 0
            };

            [rigb] (sched = 1) & !Collision  -U->
            pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
            pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
            pf : (rigrow' = 1) & (sched' = 0) +
            pb : (rigrow' = 0) & (sched' = 0) +
            pm : (rigrow' = 0) & (sched' = 0)           // Command successful
            {
	        // Success is affected by the quality and inclination of the terrain
	        pm <= 0.4888770002894749,
	        // The following are the conditions for the probabilities of sideways and frontal displacements
	        1 * pl + (- 0.5647602525937684 * pr) >= 0,
	        0.977450557262783 * pr + (- 0.5777890742374759 * pl) >= 0,
	        1 * pf + (- 0.4860033286776914 * pb) >= 0,
	        0.84114316166169 * pb + (- 0.5777890742374759 * pf) >= 0
            };
                [rigl] (sched = 1) & (robrow = 1) & (robrow = 0) & !Collision  -U->
                pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
                pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
                pf : (rigrow' = 1) & (sched' = 0) +
                pb : (rigrow' = 0) & (sched' = 0) +
                pm : (rigcol' = 0) & (sched' = 0)            // Command successful
                {

                // Success is affected by the quality and inclination of the terrain
	            pm <= 0.3307112604325396,
	            // The following are the conditions for the probabilities of sideways and frontal displacements
	            0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
	            1 * pr + (- 0.5029466625194534 * pl) >= 0,
	            1 * pf + (- 0.32158640970638025 * pb) >= 0,
	            0.5178335005859267 * pb + (- 0.6210227985298488 * pf) >= 0 
            }; 
                [rigr] (sched = 1) & (robrow = 1) & (robrow = 0) & !Collision  -U->
                pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
                pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
                pf : (rigrow' = 1) & (sched' = 0) +
                pb : (rigrow' = 0) & (sched' = 0) +
                pm : (rigcol' = 1) & (sched' = 0)     // Command successful 
                {
 
                // Success is affected by the quality and inclination of the terrain
	            pm <= 0.3307112604325396,
	            // The following are the conditions for the probabilities of sideways and frontal displacements
	            0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
	            1 * pr + (- 0.5029466625194534 * pl) >= 0,
	            1 * pf + (- 0.32158640970638025 * pb) >= 0,
	            0.5178335005859267 * pb + (- 0.6210227985298488 * pf) >= 0
                };

            [rigf] (sched = 1) & !Collision  -U->
            pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
            pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
            pf : (rigrow' = 1) & (sched' = 0) +
            pb : (rigrow' = 0) & (sched' = 0) +
            pm : (rigrow' = 1) & (sched' = 0)    // Command successful
            {
            // Success is affected by the quality and inclination of the terrain
	        pm <= 0.3307112604325396,
	        // The following are the conditions for the probabilities of sideways and frontal displacements
	        0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
	        1 * pr + (- 0.5029466625194534 * pl) >= 0,
	        1 * pf + (- 0.32158640970638025 * pb) >= 0,
	        0.5178335005859267 * pb + (- 0.6210227985298488 * pf) >= 0
            };

            [rigb] (sched = 1) & !Collision  -U->
            pl : (rigcol' = 0) & (sched' = 0) +         // The first four probabilistic options
            pr : (rigcol' = 1) & (sched' = 0) +   // corresponds to environments setbacks
            pf : (rigrow' = 1) & (sched' = 0) +
            pb : (rigrow' = 0) & (sched' = 0) +
            pm : (rigrow' = 0) & (sched' = 0)           // Command successful
            {
	        // Success is affected by the quality and inclination of the terrain
	        pm <= 0.3307112604325396,
	        // The following are the conditions for the probabilities of sideways and frontal displacements
	        0.8098682749008286 * pl + (- 0.6210227985298488 * pr) >= 0,
	        1 * pr + (- 0.5029466625194534 * pl) >= 0,
	        1 * pf + (- 0.32158640970638025 * pb) >= 0,
	        0.5178335005859267 * pb + (- 0.6210227985298488 * pf) >= 0
            };endmodule
