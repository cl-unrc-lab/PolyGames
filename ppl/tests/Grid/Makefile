# Makefile.in generated by automake 1.16.5 from Makefile.am.
# tests/Grid/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Automake source file for the Parma Polyhedra Library.
# Copyright (C) 2001-2010 Roberto Bagnara <bagnara@cs.unipr.it>
# Copyright (C) 2010-2020 BUGSENG srl (http://bugseng.com)
#
# This file is part of the Parma Polyhedra Library (PPL).
#
# The PPL is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# The PPL is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02111-1307, USA.
#
# For the most up-to-date information see the Parma Polyhedra Library
# site: http://bugseng.com/products/ppl/ .

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ppl
pkgincludedir = $(includedir)/ppl
pkglibdir = $(libdir)/ppl
pkglibexecdir = $(libexecdir)/ppl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin22.5.0
host_triplet = arm-apple-darwin22.5.0
TESTS = addcongruence1$(EXEEXT) addcongruences1$(EXEEXT) \
	addconstraint1$(EXEEXT) addconstraints1$(EXEEXT) \
	addgenerator1$(EXEEXT) addgenerators1$(EXEEXT) \
	addspacedims1$(EXEEXT) affinedim1$(EXEEXT) \
	affineimage1$(EXEEXT) affineimage2$(EXEEXT) \
	affinepreimage1$(EXEEXT) affinepreimage2$(EXEEXT) \
	approximatepartition1$(EXEEXT) asciidumpload1$(EXEEXT) \
	asciidumpload2$(EXEEXT) asciidumpload3$(EXEEXT) \
	asciidumpload4$(EXEEXT) asciidumpload5$(EXEEXT) \
	asciidumpload6$(EXEEXT) bhz03widening1$(EXEEXT) \
	bounded1$(EXEEXT) bounds1$(EXEEXT) \
	boundedaffineimage1$(EXEEXT) boundedaffinepreimage1$(EXEEXT) \
	certificate1$(EXEEXT) concatenate1$(EXEEXT) \
	congruence1$(EXEEXT) congruences1$(EXEEXT) \
	congruences2$(EXEEXT) constraints1$(EXEEXT) contains1$(EXEEXT) \
	containsintegerpoint1$(EXEEXT) discrete1$(EXEEXT) \
	disjoint1$(EXEEXT) dropnonintegerpoints1$(EXEEXT) \
	equals1$(EXEEXT) expandspacedim1$(EXEEXT) \
	foldspacedims1$(EXEEXT) frequency1$(EXEEXT) \
	frombdshape1$(EXEEXT) frombox1$(EXEEXT) fromgrid1$(EXEEXT) \
	fromoctagonalshape1$(EXEEXT) frompolyhedron1$(EXEEXT) \
	generalizedaffineimage1$(EXEEXT) \
	generalizedaffineimage2$(EXEEXT) \
	generalizedaffineimage3$(EXEEXT) \
	generalizedaffinepreimage1$(EXEEXT) \
	generalizedaffinepreimage2$(EXEEXT) \
	generalizedaffinepreimage3$(EXEEXT) generator1$(EXEEXT) \
	generators1$(EXEEXT) generators2$(EXEEXT) grid1$(EXEEXT) \
	grid2$(EXEEXT) grid3$(EXEEXT) griddifference1$(EXEEXT) \
	intersection1$(EXEEXT) isempty1$(EXEEXT) isuniverse1$(EXEEXT) \
	limitedextrapolation1$(EXEEXT) limitedextrapolation2$(EXEEXT) \
	limitedextrapolation3$(EXEEXT) mapspacedims1$(EXEEXT) \
	maxmin1$(EXEEXT) membytes1$(EXEEXT) mingenerators1$(EXEEXT) \
	mincongruences1$(EXEEXT) outputoperator1$(EXEEXT) \
	outputoperator2$(EXEEXT) outputoperator3$(EXEEXT) \
	partition1$(EXEEXT) powersetdifference1$(EXEEXT) \
	powersetgeometricallycovers1$(EXEEXT) \
	powersetgeometricallyequals1$(EXEEXT) \
	refinewithcongruences1$(EXEEXT) \
	refinewithconstraints1$(EXEEXT) relations1$(EXEEXT) \
	relations2$(EXEEXT) relations3$(EXEEXT) \
	removespacedims1$(EXEEXT) removespacedims2$(EXEEXT) \
	simplifyusingcontext1$(EXEEXT) timeelapse1$(EXEEXT) \
	topclosed1$(EXEEXT) topclosure1$(EXEEXT) unconstrain1$(EXEEXT) \
	upperbound1$(EXEEXT) upperbound2$(EXEEXT) widening1$(EXEEXT) \
	widening2$(EXEEXT) widening3$(EXEEXT) wrap1$(EXEEXT) \
	writecongruencesystem$(EXEEXT)
XFAIL_TESTS =
check_PROGRAMS = $(am__EXEEXT_1)
subdir = tests/Grid
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_ciao.m4 \
	$(top_srcdir)/m4/ac_check_cxx11.m4 \
	$(top_srcdir)/m4/ac_check_fpu_control.m4 \
	$(top_srcdir)/m4/ac_check_gmp.m4 \
	$(top_srcdir)/m4/ac_check_sicstus_prolog.m4 \
	$(top_srcdir)/m4/ac_check_swi_prolog.m4 \
	$(top_srcdir)/m4/ac_check_xsb_prolog.m4 \
	$(top_srcdir)/m4/ac_check_yap.m4 \
	$(top_srcdir)/m4/ac_cxx_attribute_weak.m4 \
	$(top_srcdir)/m4/ac_cxx_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_float_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_ieee_inexact_flag.m4 \
	$(top_srcdir)/m4/ac_cxx_limit_memory.m4 \
	$(top_srcdir)/m4/ac_cxx_long_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_plain_char_is_signed.m4 \
	$(top_srcdir)/m4/ac_cxx_proper_long_double.m4 \
	$(top_srcdir)/m4/ac_cxx_zero_length_arrays.m4 \
	$(top_srcdir)/m4/ac_prog_jar.m4 \
	$(top_srcdir)/m4/ac_prog_java.m4 \
	$(top_srcdir)/m4/ac_prog_javac.m4 \
	$(top_srcdir)/m4/ac_text_md5sum.m4 \
	$(top_srcdir)/m4/ac_use_libtool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4.m4 $(top_srcdir)/m4/ocaml.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = addcongruence1$(EXEEXT) addcongruences1$(EXEEXT) \
	addconstraint1$(EXEEXT) addconstraints1$(EXEEXT) \
	addgenerator1$(EXEEXT) addgenerators1$(EXEEXT) \
	addspacedims1$(EXEEXT) affinedim1$(EXEEXT) \
	affineimage1$(EXEEXT) affineimage2$(EXEEXT) \
	affinepreimage1$(EXEEXT) affinepreimage2$(EXEEXT) \
	approximatepartition1$(EXEEXT) asciidumpload1$(EXEEXT) \
	asciidumpload2$(EXEEXT) asciidumpload3$(EXEEXT) \
	asciidumpload4$(EXEEXT) asciidumpload5$(EXEEXT) \
	asciidumpload6$(EXEEXT) bhz03widening1$(EXEEXT) \
	bounded1$(EXEEXT) bounds1$(EXEEXT) \
	boundedaffineimage1$(EXEEXT) boundedaffinepreimage1$(EXEEXT) \
	certificate1$(EXEEXT) concatenate1$(EXEEXT) \
	congruence1$(EXEEXT) congruences1$(EXEEXT) \
	congruences2$(EXEEXT) constraints1$(EXEEXT) contains1$(EXEEXT) \
	containsintegerpoint1$(EXEEXT) discrete1$(EXEEXT) \
	disjoint1$(EXEEXT) dropnonintegerpoints1$(EXEEXT) \
	equals1$(EXEEXT) expandspacedim1$(EXEEXT) \
	foldspacedims1$(EXEEXT) frequency1$(EXEEXT) \
	frombdshape1$(EXEEXT) frombox1$(EXEEXT) fromgrid1$(EXEEXT) \
	fromoctagonalshape1$(EXEEXT) frompolyhedron1$(EXEEXT) \
	generalizedaffineimage1$(EXEEXT) \
	generalizedaffineimage2$(EXEEXT) \
	generalizedaffineimage3$(EXEEXT) \
	generalizedaffinepreimage1$(EXEEXT) \
	generalizedaffinepreimage2$(EXEEXT) \
	generalizedaffinepreimage3$(EXEEXT) generator1$(EXEEXT) \
	generators1$(EXEEXT) generators2$(EXEEXT) grid1$(EXEEXT) \
	grid2$(EXEEXT) grid3$(EXEEXT) griddifference1$(EXEEXT) \
	intersection1$(EXEEXT) isempty1$(EXEEXT) isuniverse1$(EXEEXT) \
	limitedextrapolation1$(EXEEXT) limitedextrapolation2$(EXEEXT) \
	limitedextrapolation3$(EXEEXT) mapspacedims1$(EXEEXT) \
	maxmin1$(EXEEXT) membytes1$(EXEEXT) mingenerators1$(EXEEXT) \
	mincongruences1$(EXEEXT) outputoperator1$(EXEEXT) \
	outputoperator2$(EXEEXT) outputoperator3$(EXEEXT) \
	partition1$(EXEEXT) powersetdifference1$(EXEEXT) \
	powersetgeometricallycovers1$(EXEEXT) \
	powersetgeometricallyequals1$(EXEEXT) \
	refinewithcongruences1$(EXEEXT) \
	refinewithconstraints1$(EXEEXT) relations1$(EXEEXT) \
	relations2$(EXEEXT) relations3$(EXEEXT) \
	removespacedims1$(EXEEXT) removespacedims2$(EXEEXT) \
	simplifyusingcontext1$(EXEEXT) timeelapse1$(EXEEXT) \
	topclosed1$(EXEEXT) topclosure1$(EXEEXT) unconstrain1$(EXEEXT) \
	upperbound1$(EXEEXT) upperbound2$(EXEEXT) widening1$(EXEEXT) \
	widening2$(EXEEXT) widening3$(EXEEXT) wrap1$(EXEEXT) \
	writecongruencesystem$(EXEEXT)
am_addcongruence1_OBJECTS = addcongruence1.$(OBJEXT)
addcongruence1_OBJECTS = $(am_addcongruence1_OBJECTS)
addcongruence1_LDADD = $(LDADD)
addcongruence1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_addcongruences1_OBJECTS = addcongruences1.$(OBJEXT)
addcongruences1_OBJECTS = $(am_addcongruences1_OBJECTS)
addcongruences1_LDADD = $(LDADD)
addcongruences1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_addconstraint1_OBJECTS = addconstraint1.$(OBJEXT)
addconstraint1_OBJECTS = $(am_addconstraint1_OBJECTS)
addconstraint1_LDADD = $(LDADD)
addconstraint1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_addconstraints1_OBJECTS = addconstraints1.$(OBJEXT)
addconstraints1_OBJECTS = $(am_addconstraints1_OBJECTS)
addconstraints1_LDADD = $(LDADD)
addconstraints1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_addgenerator1_OBJECTS = addgenerator1.$(OBJEXT)
addgenerator1_OBJECTS = $(am_addgenerator1_OBJECTS)
addgenerator1_LDADD = $(LDADD)
addgenerator1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_addgenerators1_OBJECTS = addgenerators1.$(OBJEXT)
addgenerators1_OBJECTS = $(am_addgenerators1_OBJECTS)
addgenerators1_LDADD = $(LDADD)
addgenerators1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_addspacedims1_OBJECTS = addspacedims1.$(OBJEXT)
addspacedims1_OBJECTS = $(am_addspacedims1_OBJECTS)
addspacedims1_LDADD = $(LDADD)
addspacedims1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affinedim1_OBJECTS = affinedim1.$(OBJEXT)
affinedim1_OBJECTS = $(am_affinedim1_OBJECTS)
affinedim1_LDADD = $(LDADD)
affinedim1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affineimage1_OBJECTS = affineimage1.$(OBJEXT)
affineimage1_OBJECTS = $(am_affineimage1_OBJECTS)
affineimage1_LDADD = $(LDADD)
affineimage1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affineimage2_OBJECTS = affineimage2.$(OBJEXT)
affineimage2_OBJECTS = $(am_affineimage2_OBJECTS)
affineimage2_LDADD = $(LDADD)
affineimage2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affinepreimage1_OBJECTS = affinepreimage1.$(OBJEXT)
affinepreimage1_OBJECTS = $(am_affinepreimage1_OBJECTS)
affinepreimage1_LDADD = $(LDADD)
affinepreimage1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affinepreimage2_OBJECTS = affinepreimage2.$(OBJEXT)
affinepreimage2_OBJECTS = $(am_affinepreimage2_OBJECTS)
affinepreimage2_LDADD = $(LDADD)
affinepreimage2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_approximatepartition1_OBJECTS = approximatepartition1.$(OBJEXT)
approximatepartition1_OBJECTS = $(am_approximatepartition1_OBJECTS)
approximatepartition1_LDADD = $(LDADD)
approximatepartition1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_asciidumpload1_OBJECTS = asciidumpload1.$(OBJEXT)
asciidumpload1_OBJECTS = $(am_asciidumpload1_OBJECTS)
asciidumpload1_LDADD = $(LDADD)
asciidumpload1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_asciidumpload2_OBJECTS = asciidumpload2.$(OBJEXT)
asciidumpload2_OBJECTS = $(am_asciidumpload2_OBJECTS)
asciidumpload2_LDADD = $(LDADD)
asciidumpload2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_asciidumpload3_OBJECTS = asciidumpload3.$(OBJEXT)
asciidumpload3_OBJECTS = $(am_asciidumpload3_OBJECTS)
asciidumpload3_LDADD = $(LDADD)
asciidumpload3_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_asciidumpload4_OBJECTS = asciidumpload4.$(OBJEXT)
asciidumpload4_OBJECTS = $(am_asciidumpload4_OBJECTS)
asciidumpload4_LDADD = $(LDADD)
asciidumpload4_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_asciidumpload5_OBJECTS = asciidumpload5.$(OBJEXT)
asciidumpload5_OBJECTS = $(am_asciidumpload5_OBJECTS)
asciidumpload5_LDADD = $(LDADD)
asciidumpload5_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_asciidumpload6_OBJECTS = asciidumpload6.$(OBJEXT)
asciidumpload6_OBJECTS = $(am_asciidumpload6_OBJECTS)
asciidumpload6_LDADD = $(LDADD)
asciidumpload6_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_bhz03widening1_OBJECTS = bhz03widening1.$(OBJEXT)
bhz03widening1_OBJECTS = $(am_bhz03widening1_OBJECTS)
bhz03widening1_LDADD = $(LDADD)
bhz03widening1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_bounded1_OBJECTS = bounded1.$(OBJEXT)
bounded1_OBJECTS = $(am_bounded1_OBJECTS)
bounded1_LDADD = $(LDADD)
bounded1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_boundedaffineimage1_OBJECTS = boundedaffineimage1.$(OBJEXT)
boundedaffineimage1_OBJECTS = $(am_boundedaffineimage1_OBJECTS)
boundedaffineimage1_LDADD = $(LDADD)
boundedaffineimage1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_boundedaffinepreimage1_OBJECTS = boundedaffinepreimage1.$(OBJEXT)
boundedaffinepreimage1_OBJECTS = $(am_boundedaffinepreimage1_OBJECTS)
boundedaffinepreimage1_LDADD = $(LDADD)
boundedaffinepreimage1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_bounds1_OBJECTS = bounds1.$(OBJEXT)
bounds1_OBJECTS = $(am_bounds1_OBJECTS)
bounds1_LDADD = $(LDADD)
bounds1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_certificate1_OBJECTS = certificate1.$(OBJEXT)
certificate1_OBJECTS = $(am_certificate1_OBJECTS)
certificate1_LDADD = $(LDADD)
certificate1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_concatenate1_OBJECTS = concatenate1.$(OBJEXT)
concatenate1_OBJECTS = $(am_concatenate1_OBJECTS)
concatenate1_LDADD = $(LDADD)
concatenate1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_congruence1_OBJECTS = congruence1.$(OBJEXT)
congruence1_OBJECTS = $(am_congruence1_OBJECTS)
congruence1_LDADD = $(LDADD)
congruence1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_congruences1_OBJECTS = congruences1.$(OBJEXT)
congruences1_OBJECTS = $(am_congruences1_OBJECTS)
congruences1_LDADD = $(LDADD)
congruences1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_congruences2_OBJECTS = congruences2.$(OBJEXT)
congruences2_OBJECTS = $(am_congruences2_OBJECTS)
congruences2_LDADD = $(LDADD)
congruences2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_constraints1_OBJECTS = constraints1.$(OBJEXT)
constraints1_OBJECTS = $(am_constraints1_OBJECTS)
constraints1_LDADD = $(LDADD)
constraints1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_contains1_OBJECTS = contains1.$(OBJEXT)
contains1_OBJECTS = $(am_contains1_OBJECTS)
contains1_LDADD = $(LDADD)
contains1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_containsintegerpoint1_OBJECTS = containsintegerpoint1.$(OBJEXT)
containsintegerpoint1_OBJECTS = $(am_containsintegerpoint1_OBJECTS)
containsintegerpoint1_LDADD = $(LDADD)
containsintegerpoint1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_discrete1_OBJECTS = discrete1.$(OBJEXT)
discrete1_OBJECTS = $(am_discrete1_OBJECTS)
discrete1_LDADD = $(LDADD)
discrete1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_disjoint1_OBJECTS = disjoint1.$(OBJEXT)
disjoint1_OBJECTS = $(am_disjoint1_OBJECTS)
disjoint1_LDADD = $(LDADD)
disjoint1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_dropnonintegerpoints1_OBJECTS = dropnonintegerpoints1.$(OBJEXT)
dropnonintegerpoints1_OBJECTS = $(am_dropnonintegerpoints1_OBJECTS)
dropnonintegerpoints1_LDADD = $(LDADD)
dropnonintegerpoints1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_equals1_OBJECTS = equals1.$(OBJEXT)
equals1_OBJECTS = $(am_equals1_OBJECTS)
equals1_LDADD = $(LDADD)
equals1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_expandspacedim1_OBJECTS = expandspacedim1.$(OBJEXT)
expandspacedim1_OBJECTS = $(am_expandspacedim1_OBJECTS)
expandspacedim1_LDADD = $(LDADD)
expandspacedim1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_foldspacedims1_OBJECTS = foldspacedims1.$(OBJEXT)
foldspacedims1_OBJECTS = $(am_foldspacedims1_OBJECTS)
foldspacedims1_LDADD = $(LDADD)
foldspacedims1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_frequency1_OBJECTS = frequency1.$(OBJEXT)
frequency1_OBJECTS = $(am_frequency1_OBJECTS)
frequency1_LDADD = $(LDADD)
frequency1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_frombdshape1_OBJECTS = frombdshape1.$(OBJEXT)
frombdshape1_OBJECTS = $(am_frombdshape1_OBJECTS)
frombdshape1_LDADD = $(LDADD)
frombdshape1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_frombox1_OBJECTS = frombox1.$(OBJEXT)
frombox1_OBJECTS = $(am_frombox1_OBJECTS)
frombox1_LDADD = $(LDADD)
frombox1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_fromgrid1_OBJECTS = fromgrid1.$(OBJEXT)
fromgrid1_OBJECTS = $(am_fromgrid1_OBJECTS)
fromgrid1_LDADD = $(LDADD)
fromgrid1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_fromoctagonalshape1_OBJECTS = fromoctagonalshape1.$(OBJEXT)
fromoctagonalshape1_OBJECTS = $(am_fromoctagonalshape1_OBJECTS)
fromoctagonalshape1_LDADD = $(LDADD)
fromoctagonalshape1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_frompolyhedron1_OBJECTS = frompolyhedron1.$(OBJEXT)
frompolyhedron1_OBJECTS = $(am_frompolyhedron1_OBJECTS)
frompolyhedron1_LDADD = $(LDADD)
frompolyhedron1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generalizedaffineimage1_OBJECTS =  \
	generalizedaffineimage1.$(OBJEXT)
generalizedaffineimage1_OBJECTS =  \
	$(am_generalizedaffineimage1_OBJECTS)
generalizedaffineimage1_LDADD = $(LDADD)
generalizedaffineimage1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generalizedaffineimage2_OBJECTS =  \
	generalizedaffineimage2.$(OBJEXT)
generalizedaffineimage2_OBJECTS =  \
	$(am_generalizedaffineimage2_OBJECTS)
generalizedaffineimage2_LDADD = $(LDADD)
generalizedaffineimage2_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generalizedaffineimage3_OBJECTS =  \
	generalizedaffineimage3.$(OBJEXT)
generalizedaffineimage3_OBJECTS =  \
	$(am_generalizedaffineimage3_OBJECTS)
generalizedaffineimage3_LDADD = $(LDADD)
generalizedaffineimage3_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generalizedaffinepreimage1_OBJECTS =  \
	generalizedaffinepreimage1.$(OBJEXT)
generalizedaffinepreimage1_OBJECTS =  \
	$(am_generalizedaffinepreimage1_OBJECTS)
generalizedaffinepreimage1_LDADD = $(LDADD)
generalizedaffinepreimage1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generalizedaffinepreimage2_OBJECTS =  \
	generalizedaffinepreimage2.$(OBJEXT)
generalizedaffinepreimage2_OBJECTS =  \
	$(am_generalizedaffinepreimage2_OBJECTS)
generalizedaffinepreimage2_LDADD = $(LDADD)
generalizedaffinepreimage2_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generalizedaffinepreimage3_OBJECTS =  \
	generalizedaffinepreimage3.$(OBJEXT)
generalizedaffinepreimage3_OBJECTS =  \
	$(am_generalizedaffinepreimage3_OBJECTS)
generalizedaffinepreimage3_LDADD = $(LDADD)
generalizedaffinepreimage3_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generator1_OBJECTS = generator1.$(OBJEXT)
generator1_OBJECTS = $(am_generator1_OBJECTS)
generator1_LDADD = $(LDADD)
generator1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generators1_OBJECTS = generators1.$(OBJEXT)
generators1_OBJECTS = $(am_generators1_OBJECTS)
generators1_LDADD = $(LDADD)
generators1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_generators2_OBJECTS = generators2.$(OBJEXT)
generators2_OBJECTS = $(am_generators2_OBJECTS)
generators2_LDADD = $(LDADD)
generators2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_grid1_OBJECTS = grid1.$(OBJEXT)
grid1_OBJECTS = $(am_grid1_OBJECTS)
grid1_LDADD = $(LDADD)
grid1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_grid2_OBJECTS = grid2.$(OBJEXT)
grid2_OBJECTS = $(am_grid2_OBJECTS)
grid2_LDADD = $(LDADD)
grid2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_grid3_OBJECTS = grid3.$(OBJEXT)
grid3_OBJECTS = $(am_grid3_OBJECTS)
grid3_LDADD = $(LDADD)
grid3_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_griddifference1_OBJECTS = griddifference1.$(OBJEXT)
griddifference1_OBJECTS = $(am_griddifference1_OBJECTS)
griddifference1_LDADD = $(LDADD)
griddifference1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_intersection1_OBJECTS = intersection1.$(OBJEXT)
intersection1_OBJECTS = $(am_intersection1_OBJECTS)
intersection1_LDADD = $(LDADD)
intersection1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_isempty1_OBJECTS = isempty1.$(OBJEXT)
isempty1_OBJECTS = $(am_isempty1_OBJECTS)
isempty1_LDADD = $(LDADD)
isempty1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_isuniverse1_OBJECTS = isuniverse1.$(OBJEXT)
isuniverse1_OBJECTS = $(am_isuniverse1_OBJECTS)
isuniverse1_LDADD = $(LDADD)
isuniverse1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_limitedextrapolation1_OBJECTS = limitedextrapolation1.$(OBJEXT)
limitedextrapolation1_OBJECTS = $(am_limitedextrapolation1_OBJECTS)
limitedextrapolation1_LDADD = $(LDADD)
limitedextrapolation1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_limitedextrapolation2_OBJECTS = limitedextrapolation2.$(OBJEXT)
limitedextrapolation2_OBJECTS = $(am_limitedextrapolation2_OBJECTS)
limitedextrapolation2_LDADD = $(LDADD)
limitedextrapolation2_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_limitedextrapolation3_OBJECTS = limitedextrapolation3.$(OBJEXT)
limitedextrapolation3_OBJECTS = $(am_limitedextrapolation3_OBJECTS)
limitedextrapolation3_LDADD = $(LDADD)
limitedextrapolation3_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_mapspacedims1_OBJECTS = mapspacedims1.$(OBJEXT)
mapspacedims1_OBJECTS = $(am_mapspacedims1_OBJECTS)
mapspacedims1_LDADD = $(LDADD)
mapspacedims1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_maxmin1_OBJECTS = maxmin1.$(OBJEXT)
maxmin1_OBJECTS = $(am_maxmin1_OBJECTS)
maxmin1_LDADD = $(LDADD)
maxmin1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_membytes1_OBJECTS = membytes1.$(OBJEXT)
membytes1_OBJECTS = $(am_membytes1_OBJECTS)
membytes1_LDADD = $(LDADD)
membytes1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_mincongruences1_OBJECTS = mincongruences1.$(OBJEXT)
mincongruences1_OBJECTS = $(am_mincongruences1_OBJECTS)
mincongruences1_LDADD = $(LDADD)
mincongruences1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_mingenerators1_OBJECTS = mingenerators1.$(OBJEXT)
mingenerators1_OBJECTS = $(am_mingenerators1_OBJECTS)
mingenerators1_LDADD = $(LDADD)
mingenerators1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_outputoperator1_OBJECTS = outputoperator1.$(OBJEXT)
outputoperator1_OBJECTS = $(am_outputoperator1_OBJECTS)
outputoperator1_LDADD = $(LDADD)
outputoperator1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_outputoperator2_OBJECTS = outputoperator2.$(OBJEXT)
outputoperator2_OBJECTS = $(am_outputoperator2_OBJECTS)
outputoperator2_LDADD = $(LDADD)
outputoperator2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_outputoperator3_OBJECTS = outputoperator3.$(OBJEXT)
outputoperator3_OBJECTS = $(am_outputoperator3_OBJECTS)
outputoperator3_LDADD = $(LDADD)
outputoperator3_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_partition1_OBJECTS = partition1.$(OBJEXT)
partition1_OBJECTS = $(am_partition1_OBJECTS)
partition1_LDADD = $(LDADD)
partition1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_powersetdifference1_OBJECTS = powersetdifference1.$(OBJEXT)
powersetdifference1_OBJECTS = $(am_powersetdifference1_OBJECTS)
powersetdifference1_LDADD = $(LDADD)
powersetdifference1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_powersetgeometricallycovers1_OBJECTS =  \
	powersetgeometricallycovers1.$(OBJEXT)
powersetgeometricallycovers1_OBJECTS =  \
	$(am_powersetgeometricallycovers1_OBJECTS)
powersetgeometricallycovers1_LDADD = $(LDADD)
powersetgeometricallycovers1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_powersetgeometricallyequals1_OBJECTS =  \
	powersetgeometricallyequals1.$(OBJEXT)
powersetgeometricallyequals1_OBJECTS =  \
	$(am_powersetgeometricallyequals1_OBJECTS)
powersetgeometricallyequals1_LDADD = $(LDADD)
powersetgeometricallyequals1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_refinewithcongruences1_OBJECTS = refinewithcongruences1.$(OBJEXT)
refinewithcongruences1_OBJECTS = $(am_refinewithcongruences1_OBJECTS)
refinewithcongruences1_LDADD = $(LDADD)
refinewithcongruences1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_refinewithconstraints1_OBJECTS = refinewithconstraints1.$(OBJEXT)
refinewithconstraints1_OBJECTS = $(am_refinewithconstraints1_OBJECTS)
refinewithconstraints1_LDADD = $(LDADD)
refinewithconstraints1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_relations1_OBJECTS = relations1.$(OBJEXT)
relations1_OBJECTS = $(am_relations1_OBJECTS)
relations1_LDADD = $(LDADD)
relations1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_relations2_OBJECTS = relations2.$(OBJEXT)
relations2_OBJECTS = $(am_relations2_OBJECTS)
relations2_LDADD = $(LDADD)
relations2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_relations3_OBJECTS = relations3.$(OBJEXT)
relations3_OBJECTS = $(am_relations3_OBJECTS)
relations3_LDADD = $(LDADD)
relations3_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_removespacedims1_OBJECTS = removespacedims1.$(OBJEXT)
removespacedims1_OBJECTS = $(am_removespacedims1_OBJECTS)
removespacedims1_LDADD = $(LDADD)
removespacedims1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_removespacedims2_OBJECTS = removespacedims2.$(OBJEXT)
removespacedims2_OBJECTS = $(am_removespacedims2_OBJECTS)
removespacedims2_LDADD = $(LDADD)
removespacedims2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_simplifyusingcontext1_OBJECTS = simplifyusingcontext1.$(OBJEXT)
simplifyusingcontext1_OBJECTS = $(am_simplifyusingcontext1_OBJECTS)
simplifyusingcontext1_LDADD = $(LDADD)
simplifyusingcontext1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_timeelapse1_OBJECTS = timeelapse1.$(OBJEXT)
timeelapse1_OBJECTS = $(am_timeelapse1_OBJECTS)
timeelapse1_LDADD = $(LDADD)
timeelapse1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_topclosed1_OBJECTS = topclosed1.$(OBJEXT)
topclosed1_OBJECTS = $(am_topclosed1_OBJECTS)
topclosed1_LDADD = $(LDADD)
topclosed1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_topclosure1_OBJECTS = topclosure1.$(OBJEXT)
topclosure1_OBJECTS = $(am_topclosure1_OBJECTS)
topclosure1_LDADD = $(LDADD)
topclosure1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_unconstrain1_OBJECTS = unconstrain1.$(OBJEXT)
unconstrain1_OBJECTS = $(am_unconstrain1_OBJECTS)
unconstrain1_LDADD = $(LDADD)
unconstrain1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_upperbound1_OBJECTS = upperbound1.$(OBJEXT)
upperbound1_OBJECTS = $(am_upperbound1_OBJECTS)
upperbound1_LDADD = $(LDADD)
upperbound1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_upperbound2_OBJECTS = upperbound2.$(OBJEXT)
upperbound2_OBJECTS = $(am_upperbound2_OBJECTS)
upperbound2_LDADD = $(LDADD)
upperbound2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_widening1_OBJECTS = widening1.$(OBJEXT)
widening1_OBJECTS = $(am_widening1_OBJECTS)
widening1_LDADD = $(LDADD)
widening1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_widening2_OBJECTS = widening2.$(OBJEXT)
widening2_OBJECTS = $(am_widening2_OBJECTS)
widening2_LDADD = $(LDADD)
widening2_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_widening3_OBJECTS = widening3.$(OBJEXT)
widening3_OBJECTS = $(am_widening3_OBJECTS)
widening3_LDADD = $(LDADD)
widening3_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_wrap1_OBJECTS = wrap1.$(OBJEXT)
wrap1_OBJECTS = $(am_wrap1_OBJECTS)
wrap1_LDADD = $(LDADD)
wrap1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_writecongruencesystem_OBJECTS = writecongruencesystem.$(OBJEXT)
writecongruencesystem_OBJECTS = $(am_writecongruencesystem_OBJECTS)
writecongruencesystem_LDADD = $(LDADD)
writecongruencesystem_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/addcongruence1.Po \
	./$(DEPDIR)/addcongruences1.Po ./$(DEPDIR)/addconstraint1.Po \
	./$(DEPDIR)/addconstraints1.Po ./$(DEPDIR)/addgenerator1.Po \
	./$(DEPDIR)/addgenerators1.Po ./$(DEPDIR)/addspacedims1.Po \
	./$(DEPDIR)/affinedim1.Po ./$(DEPDIR)/affineimage1.Po \
	./$(DEPDIR)/affineimage2.Po ./$(DEPDIR)/affinepreimage1.Po \
	./$(DEPDIR)/affinepreimage2.Po \
	./$(DEPDIR)/approximatepartition1.Po \
	./$(DEPDIR)/asciidumpload1.Po ./$(DEPDIR)/asciidumpload2.Po \
	./$(DEPDIR)/asciidumpload3.Po ./$(DEPDIR)/asciidumpload4.Po \
	./$(DEPDIR)/asciidumpload5.Po ./$(DEPDIR)/asciidumpload6.Po \
	./$(DEPDIR)/bhz03widening1.Po ./$(DEPDIR)/bounded1.Po \
	./$(DEPDIR)/boundedaffineimage1.Po \
	./$(DEPDIR)/boundedaffinepreimage1.Po ./$(DEPDIR)/bounds1.Po \
	./$(DEPDIR)/certificate1.Po ./$(DEPDIR)/concatenate1.Po \
	./$(DEPDIR)/congruence1.Po ./$(DEPDIR)/congruences1.Po \
	./$(DEPDIR)/congruences2.Po ./$(DEPDIR)/constraints1.Po \
	./$(DEPDIR)/contains1.Po ./$(DEPDIR)/containsintegerpoint1.Po \
	./$(DEPDIR)/discrete1.Po ./$(DEPDIR)/disjoint1.Po \
	./$(DEPDIR)/dropnonintegerpoints1.Po ./$(DEPDIR)/equals1.Po \
	./$(DEPDIR)/expandspacedim1.Po ./$(DEPDIR)/foldspacedims1.Po \
	./$(DEPDIR)/frequency1.Po ./$(DEPDIR)/frombdshape1.Po \
	./$(DEPDIR)/frombox1.Po ./$(DEPDIR)/fromgrid1.Po \
	./$(DEPDIR)/fromoctagonalshape1.Po \
	./$(DEPDIR)/frompolyhedron1.Po \
	./$(DEPDIR)/generalizedaffineimage1.Po \
	./$(DEPDIR)/generalizedaffineimage2.Po \
	./$(DEPDIR)/generalizedaffineimage3.Po \
	./$(DEPDIR)/generalizedaffinepreimage1.Po \
	./$(DEPDIR)/generalizedaffinepreimage2.Po \
	./$(DEPDIR)/generalizedaffinepreimage3.Po \
	./$(DEPDIR)/generator1.Po ./$(DEPDIR)/generators1.Po \
	./$(DEPDIR)/generators2.Po ./$(DEPDIR)/grid1.Po \
	./$(DEPDIR)/grid2.Po ./$(DEPDIR)/grid3.Po \
	./$(DEPDIR)/griddifference1.Po ./$(DEPDIR)/intersection1.Po \
	./$(DEPDIR)/isempty1.Po ./$(DEPDIR)/isuniverse1.Po \
	./$(DEPDIR)/limitedextrapolation1.Po \
	./$(DEPDIR)/limitedextrapolation2.Po \
	./$(DEPDIR)/limitedextrapolation3.Po \
	./$(DEPDIR)/mapspacedims1.Po ./$(DEPDIR)/maxmin1.Po \
	./$(DEPDIR)/membytes1.Po ./$(DEPDIR)/mincongruences1.Po \
	./$(DEPDIR)/mingenerators1.Po ./$(DEPDIR)/outputoperator1.Po \
	./$(DEPDIR)/outputoperator2.Po ./$(DEPDIR)/outputoperator3.Po \
	./$(DEPDIR)/partition1.Po ./$(DEPDIR)/powersetdifference1.Po \
	./$(DEPDIR)/powersetgeometricallycovers1.Po \
	./$(DEPDIR)/powersetgeometricallyequals1.Po \
	./$(DEPDIR)/refinewithcongruences1.Po \
	./$(DEPDIR)/refinewithconstraints1.Po \
	./$(DEPDIR)/relations1.Po ./$(DEPDIR)/relations2.Po \
	./$(DEPDIR)/relations3.Po ./$(DEPDIR)/removespacedims1.Po \
	./$(DEPDIR)/removespacedims2.Po \
	./$(DEPDIR)/simplifyusingcontext1.Po \
	./$(DEPDIR)/timeelapse1.Po ./$(DEPDIR)/topclosed1.Po \
	./$(DEPDIR)/topclosure1.Po ./$(DEPDIR)/unconstrain1.Po \
	./$(DEPDIR)/upperbound1.Po ./$(DEPDIR)/upperbound2.Po \
	./$(DEPDIR)/widening1.Po ./$(DEPDIR)/widening2.Po \
	./$(DEPDIR)/widening3.Po ./$(DEPDIR)/wrap1.Po \
	./$(DEPDIR)/writecongruencesystem.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(addcongruence1_SOURCES) $(addcongruences1_SOURCES) \
	$(addconstraint1_SOURCES) $(addconstraints1_SOURCES) \
	$(addgenerator1_SOURCES) $(addgenerators1_SOURCES) \
	$(addspacedims1_SOURCES) $(affinedim1_SOURCES) \
	$(affineimage1_SOURCES) $(affineimage2_SOURCES) \
	$(affinepreimage1_SOURCES) $(affinepreimage2_SOURCES) \
	$(approximatepartition1_SOURCES) $(asciidumpload1_SOURCES) \
	$(asciidumpload2_SOURCES) $(asciidumpload3_SOURCES) \
	$(asciidumpload4_SOURCES) $(asciidumpload5_SOURCES) \
	$(asciidumpload6_SOURCES) $(bhz03widening1_SOURCES) \
	$(bounded1_SOURCES) $(boundedaffineimage1_SOURCES) \
	$(boundedaffinepreimage1_SOURCES) $(bounds1_SOURCES) \
	$(certificate1_SOURCES) $(concatenate1_SOURCES) \
	$(congruence1_SOURCES) $(congruences1_SOURCES) \
	$(congruences2_SOURCES) $(constraints1_SOURCES) \
	$(contains1_SOURCES) $(containsintegerpoint1_SOURCES) \
	$(discrete1_SOURCES) $(disjoint1_SOURCES) \
	$(dropnonintegerpoints1_SOURCES) $(equals1_SOURCES) \
	$(expandspacedim1_SOURCES) $(foldspacedims1_SOURCES) \
	$(frequency1_SOURCES) $(frombdshape1_SOURCES) \
	$(frombox1_SOURCES) $(fromgrid1_SOURCES) \
	$(fromoctagonalshape1_SOURCES) $(frompolyhedron1_SOURCES) \
	$(generalizedaffineimage1_SOURCES) \
	$(generalizedaffineimage2_SOURCES) \
	$(generalizedaffineimage3_SOURCES) \
	$(generalizedaffinepreimage1_SOURCES) \
	$(generalizedaffinepreimage2_SOURCES) \
	$(generalizedaffinepreimage3_SOURCES) $(generator1_SOURCES) \
	$(generators1_SOURCES) $(generators2_SOURCES) $(grid1_SOURCES) \
	$(grid2_SOURCES) $(grid3_SOURCES) $(griddifference1_SOURCES) \
	$(intersection1_SOURCES) $(isempty1_SOURCES) \
	$(isuniverse1_SOURCES) $(limitedextrapolation1_SOURCES) \
	$(limitedextrapolation2_SOURCES) \
	$(limitedextrapolation3_SOURCES) $(mapspacedims1_SOURCES) \
	$(maxmin1_SOURCES) $(membytes1_SOURCES) \
	$(mincongruences1_SOURCES) $(mingenerators1_SOURCES) \
	$(outputoperator1_SOURCES) $(outputoperator2_SOURCES) \
	$(outputoperator3_SOURCES) $(partition1_SOURCES) \
	$(powersetdifference1_SOURCES) \
	$(powersetgeometricallycovers1_SOURCES) \
	$(powersetgeometricallyequals1_SOURCES) \
	$(refinewithcongruences1_SOURCES) \
	$(refinewithconstraints1_SOURCES) $(relations1_SOURCES) \
	$(relations2_SOURCES) $(relations3_SOURCES) \
	$(removespacedims1_SOURCES) $(removespacedims2_SOURCES) \
	$(simplifyusingcontext1_SOURCES) $(timeelapse1_SOURCES) \
	$(topclosed1_SOURCES) $(topclosure1_SOURCES) \
	$(unconstrain1_SOURCES) $(upperbound1_SOURCES) \
	$(upperbound2_SOURCES) $(widening1_SOURCES) \
	$(widening2_SOURCES) $(widening3_SOURCES) $(wrap1_SOURCES) \
	$(writecongruencesystem_SOURCES)
DIST_SOURCES = $(addcongruence1_SOURCES) $(addcongruences1_SOURCES) \
	$(addconstraint1_SOURCES) $(addconstraints1_SOURCES) \
	$(addgenerator1_SOURCES) $(addgenerators1_SOURCES) \
	$(addspacedims1_SOURCES) $(affinedim1_SOURCES) \
	$(affineimage1_SOURCES) $(affineimage2_SOURCES) \
	$(affinepreimage1_SOURCES) $(affinepreimage2_SOURCES) \
	$(approximatepartition1_SOURCES) $(asciidumpload1_SOURCES) \
	$(asciidumpload2_SOURCES) $(asciidumpload3_SOURCES) \
	$(asciidumpload4_SOURCES) $(asciidumpload5_SOURCES) \
	$(asciidumpload6_SOURCES) $(bhz03widening1_SOURCES) \
	$(bounded1_SOURCES) $(boundedaffineimage1_SOURCES) \
	$(boundedaffinepreimage1_SOURCES) $(bounds1_SOURCES) \
	$(certificate1_SOURCES) $(concatenate1_SOURCES) \
	$(congruence1_SOURCES) $(congruences1_SOURCES) \
	$(congruences2_SOURCES) $(constraints1_SOURCES) \
	$(contains1_SOURCES) $(containsintegerpoint1_SOURCES) \
	$(discrete1_SOURCES) $(disjoint1_SOURCES) \
	$(dropnonintegerpoints1_SOURCES) $(equals1_SOURCES) \
	$(expandspacedim1_SOURCES) $(foldspacedims1_SOURCES) \
	$(frequency1_SOURCES) $(frombdshape1_SOURCES) \
	$(frombox1_SOURCES) $(fromgrid1_SOURCES) \
	$(fromoctagonalshape1_SOURCES) $(frompolyhedron1_SOURCES) \
	$(generalizedaffineimage1_SOURCES) \
	$(generalizedaffineimage2_SOURCES) \
	$(generalizedaffineimage3_SOURCES) \
	$(generalizedaffinepreimage1_SOURCES) \
	$(generalizedaffinepreimage2_SOURCES) \
	$(generalizedaffinepreimage3_SOURCES) $(generator1_SOURCES) \
	$(generators1_SOURCES) $(generators2_SOURCES) $(grid1_SOURCES) \
	$(grid2_SOURCES) $(grid3_SOURCES) $(griddifference1_SOURCES) \
	$(intersection1_SOURCES) $(isempty1_SOURCES) \
	$(isuniverse1_SOURCES) $(limitedextrapolation1_SOURCES) \
	$(limitedextrapolation2_SOURCES) \
	$(limitedextrapolation3_SOURCES) $(mapspacedims1_SOURCES) \
	$(maxmin1_SOURCES) $(membytes1_SOURCES) \
	$(mincongruences1_SOURCES) $(mingenerators1_SOURCES) \
	$(outputoperator1_SOURCES) $(outputoperator2_SOURCES) \
	$(outputoperator3_SOURCES) $(partition1_SOURCES) \
	$(powersetdifference1_SOURCES) \
	$(powersetgeometricallycovers1_SOURCES) \
	$(powersetgeometricallyequals1_SOURCES) \
	$(refinewithcongruences1_SOURCES) \
	$(refinewithconstraints1_SOURCES) $(relations1_SOURCES) \
	$(relations2_SOURCES) $(relations3_SOURCES) \
	$(removespacedims1_SOURCES) $(removespacedims2_SOURCES) \
	$(simplifyusingcontext1_SOURCES) $(timeelapse1_SOURCES) \
	$(topclosed1_SOURCES) $(topclosure1_SOURCES) \
	$(unconstrain1_SOURCES) $(upperbound1_SOURCES) \
	$(upperbound2_SOURCES) $(widening1_SOURCES) \
	$(widening2_SOURCES) $(widening3_SOURCES) $(wrap1_SOURCES) \
	$(writecongruencesystem_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs $(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/Users/pablo/University/Tools/PolyGames/ppl/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '/Users/pablo/University/Tools/PolyGames/ppl/missing' autoconf
AUTOHEADER = ${SHELL} '/Users/pablo/University/Tools/PolyGames/ppl/missing' autoheader
AUTOMAKE = ${SHELL} '/Users/pablo/University/Tools/PolyGames/ppl/missing' automake-1.16
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -g -O2  -Weverything -Wno-exit-time-destructors -Wno-global-constructors -Wno-documentation -Wno-missing-noreturn -Wno-covered-switch-default -Wno-unreachable-code -Wno-c++98-compat-pedantic -Wno-switch-enum -Wno-sign-conversion -Wno-c++98-compat -Wno-padded -Wno-disabled-macro-expansion -Wno-c++11-long-long -Wno-zero-length-array
CIAO_PROLOG = 
CIAO_PROLOG_INCLUDE_OPTIONS = 
CONFIGURE_OPTIONS = 
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -g -O2 -std=c++11 -Weverything -Wno-exit-time-destructors -Wno-global-constructors -Wno-documentation -Wno-missing-noreturn -Wno-covered-switch-default -Wno-unreachable-code -Wno-c++98-compat-pedantic -Wno-switch-enum -Wno-sign-conversion -Wno-c++98-compat -Wno-padded -Wno-disabled-macro-expansion -Wno-c++11-long-long -Wno-zero-length-array
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
FILECMD = file
GNU_PROLOG = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2023-12-19
JAR = /Library/Java/JavaVirtualMachines/temurin-20.jdk/Contents/Home//bin/jar
JAVA = /Library/Java/JavaVirtualMachines/temurin-20.jdk/Contents/Home//bin/java
JAVAC = /Library/Java/JavaVirtualMachines/temurin-20.jdk/Contents/Home//bin/javac
JNIFLAGS = -I/Library/Java/JavaVirtualMachines/temurin-20.jdk/Contents/Home//include -I/Library/Java/JavaVirtualMachines/temurin-20.jdk/Contents/Home//include/darwin
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBEXT = a
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
M4 = /usr/bin/m4
M4_DEBUGFILE = --error-output
MAKEINFO = ${SHELL} '/Users/pablo/University/Tools/PolyGames/ppl/missing' makeinfo
MANIFEST_TOOL = :
MD5SUM = 
MKDIR_P = ../.././install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OCAMLBEST = 
OCAMLBUILD = 
OCAMLC = 
OCAMLCDOTOPT = 
OCAMLDEP = 
OCAMLDOC = 
OCAMLLIB = 
OCAMLMKLIB = 
OCAMLMKTOP = 
OCAMLOPT = 
OCAMLOPTDOTOPT = 
OCAMLVERSION = 
OTOOL = otool
OTOOL64 = :
PACKAGE = ppl
PACKAGE_BUGREPORT = ppl-devel@cs.unipr.it
PACKAGE_NAME = the Parma Polyhedra Library
PACKAGE_STRING = the Parma Polyhedra Library 1.3pre1
PACKAGE_TARNAME = ppl
PACKAGE_URL = 
PACKAGE_VERSION = 1.3pre1
PATH_SEPARATOR = :
PERL = /opt/homebrew/bin/perl
PPL_VERSION_BETA = 1
PPL_VERSION_MAJOR = 1
PPL_VERSION_MINOR = 3
PPL_VERSION_REVISION = 0
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHREXT = `test .$module = .yes && echo .so || echo .dylib`
SICSTUS_PROLOG_INCLUDE_OPTIONS = 
STRIP = strip
SWI_PROLOG = 
SWI_PROLOG_INCLUDE_OPTIONS = 
SWI_PROLOG_LD = 
SWI_PROLOG_LD_OPTIONS = 
TEXT_MD5SUM = 
VALGRIND = 
VERSION = 1.3pre1
XSB_PROLOG_INCLUDE_OPTIONS = 
YAP_PROLOG = 
YAP_PROLOG_INCLUDE_OPTIONS = 
YAP_PROLOG_LD_OPTIONS = 
abs_builddir = /Users/pablo/University/Tools/PolyGames/ppl/tests/Grid
abs_srcdir = /Users/pablo/University/Tools/PolyGames/ppl/tests/Grid
abs_top_builddir = /Users/pablo/University/Tools/PolyGames/ppl
abs_top_srcdir = /Users/pablo/University/Tools/PolyGames/ppl
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = arm-apple-darwin22.5.0
build_alias = 
build_cpu = arm
build_os = darwin22.5.0
build_vendor = apple
builddir = .
ciao_prolog = 
coefficient_mnemonic = mpz
datadir = ${datarootdir}
datarootdir = ${prefix}/share
debug_flag = -DNDEBUG=1
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
extra_includes = -I/opt/homebrew/include
extra_libraries = -L/opt/homebrew/lib -lgmpxx -lgmp
host = arm-apple-darwin22.5.0
host_alias = 
host_cpu = arm
host_os = darwin22.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/pablo/University/Tools/PolyGames/ppl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
mlgmp_dir = +gmp
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
required_instantiations = Polyhedron@Grid@Rational_Box@BD_Shape<mpz_class>@BD_Shape<mpq_class>@Octagonal_Shape<mpz_class>@Octagonal_Shape<mpq_class>@Constraints_Product<C_Polyhedron,Grid>@Pointset_Powerset<C_Polyhedron>@Pointset_Powerset<NNC_Polyhedron>
required_instantiations_c_cxx_headers = ppl_c_Polyhedron.hh ppl_c_Grid.hh ppl_c_Rational_Box.hh ppl_c_BD_Shape_mpz_class.hh ppl_c_BD_Shape_mpq_class.hh ppl_c_Octagonal_Shape_mpz_class.hh ppl_c_Octagonal_Shape_mpq_class.hh ppl_c_Constraints_Product_C_Polyhedron_Grid.hh ppl_c_Pointset_Powerset_C_Polyhedron.hh ppl_c_Pointset_Powerset_NNC_Polyhedron.hh
required_instantiations_c_cxx_objects = ppl_c_Polyhedron.lo ppl_c_Grid.lo ppl_c_Rational_Box.lo ppl_c_BD_Shape_mpz_class.lo ppl_c_BD_Shape_mpq_class.lo ppl_c_Octagonal_Shape_mpz_class.lo ppl_c_Octagonal_Shape_mpq_class.lo ppl_c_Constraints_Product_C_Polyhedron_Grid.lo ppl_c_Pointset_Powerset_C_Polyhedron.lo ppl_c_Pointset_Powerset_NNC_Polyhedron.lo
required_instantiations_c_cxx_sources = ppl_c_Polyhedron.cc ppl_c_Grid.cc ppl_c_Rational_Box.cc ppl_c_BD_Shape_mpz_class.cc ppl_c_BD_Shape_mpq_class.cc ppl_c_Octagonal_Shape_mpz_class.cc ppl_c_Octagonal_Shape_mpq_class.cc ppl_c_Constraints_Product_C_Polyhedron_Grid.cc ppl_c_Pointset_Powerset_C_Polyhedron.cc ppl_c_Pointset_Powerset_NNC_Polyhedron.cc
required_instantiations_canonical_names = Polyhedron@Grid@Rational_Box@BD_Shape_mpz_class@BD_Shape_mpq_class@Octagonal_Shape_mpz_class@Octagonal_Shape_mpq_class@Constraints_Product_C_Polyhedron_Grid@Pointset_Powerset_C_Polyhedron@Pointset_Powerset_NNC_Polyhedron
required_instantiations_java_classes = Polyhedron.class C_Polyhedron.class NNC_Polyhedron.class Grid.class Rational_Box.class BD_Shape_mpz_class.class BD_Shape_mpq_class.class Octagonal_Shape_mpz_class.class Octagonal_Shape_mpq_class.class Constraints_Product_C_Polyhedron_Grid.class Pointset_Powerset_C_Polyhedron.class Pointset_Powerset_C_Polyhedron_Iterator.class Pointset_Powerset_NNC_Polyhedron.class Pointset_Powerset_NNC_Polyhedron_Iterator.class
required_instantiations_java_cxx_headers = parma_polyhedra_library.Polyhedron parma_polyhedra_library.C_Polyhedron parma_polyhedra_library.NNC_Polyhedron parma_polyhedra_library.Grid parma_polyhedra_library.Rational_Box parma_polyhedra_library.BD_Shape_mpz_class parma_polyhedra_library.BD_Shape_mpq_class parma_polyhedra_library.Octagonal_Shape_mpz_class parma_polyhedra_library.Octagonal_Shape_mpq_class parma_polyhedra_library.Constraints_Product_C_Polyhedron_Grid parma_polyhedra_library.Pointset_Powerset_C_Polyhedron parma_polyhedra_library.Pointset_Powerset_C_Polyhedron_Iterator parma_polyhedra_library.Pointset_Powerset_NNC_Polyhedron parma_polyhedra_library.Pointset_Powerset_NNC_Polyhedron_Iterator
required_instantiations_java_cxx_headers_sources = parma_polyhedra_library_Polyhedron.h parma_polyhedra_library_C_Polyhedron.h parma_polyhedra_library_NNC_Polyhedron.h parma_polyhedra_library_Grid.h parma_polyhedra_library_Rational_Box.h parma_polyhedra_library_BD_Shape_mpz_class.h parma_polyhedra_library_BD_Shape_mpq_class.h parma_polyhedra_library_Octagonal_Shape_mpz_class.h parma_polyhedra_library_Octagonal_Shape_mpq_class.h parma_polyhedra_library_Constraints_Product_C_Polyhedron_Grid.h parma_polyhedra_library_Pointset_Powerset_C_Polyhedron.h parma_polyhedra_library_Pointset_Powerset_C_Polyhedron_Iterator.h parma_polyhedra_library_Pointset_Powerset_NNC_Polyhedron.h parma_polyhedra_library_Pointset_Powerset_NNC_Polyhedron_Iterator.h
required_instantiations_java_cxx_objects = ppl_java_Polyhedron.lo ppl_java_Grid.lo ppl_java_Rational_Box.lo ppl_java_BD_Shape_mpz_class.lo ppl_java_BD_Shape_mpq_class.lo ppl_java_Octagonal_Shape_mpz_class.lo ppl_java_Octagonal_Shape_mpq_class.lo ppl_java_Constraints_Product_C_Polyhedron_Grid.lo ppl_java_Pointset_Powerset_C_Polyhedron.lo ppl_java_Pointset_Powerset_NNC_Polyhedron.lo
required_instantiations_java_cxx_sources = ppl_java_Polyhedron.cc ppl_java_Grid.cc ppl_java_Rational_Box.cc ppl_java_BD_Shape_mpz_class.cc ppl_java_BD_Shape_mpq_class.cc ppl_java_Octagonal_Shape_mpz_class.cc ppl_java_Octagonal_Shape_mpq_class.cc ppl_java_Constraints_Product_C_Polyhedron_Grid.cc ppl_java_Pointset_Powerset_C_Polyhedron.cc ppl_java_Pointset_Powerset_NNC_Polyhedron.cc
required_instantiations_java_sources = Polyhedron.java C_Polyhedron.java NNC_Polyhedron.java Grid.java Rational_Box.java BD_Shape_mpz_class.java BD_Shape_mpq_class.java Octagonal_Shape_mpz_class.java Octagonal_Shape_mpq_class.java Constraints_Product_C_Polyhedron_Grid.java Pointset_Powerset_C_Polyhedron.java Pointset_Powerset_C_Polyhedron_Iterator.java Pointset_Powerset_NNC_Polyhedron.java Pointset_Powerset_NNC_Polyhedron_Iterator.java
required_instantiations_ocaml_cxx_headers = ppl_ocaml_Polyhedron.hh ppl_ocaml_Grid.hh ppl_ocaml_Rational_Box.hh ppl_ocaml_BD_Shape_mpz_class.hh ppl_ocaml_BD_Shape_mpq_class.hh ppl_ocaml_Octagonal_Shape_mpz_class.hh ppl_ocaml_Octagonal_Shape_mpq_class.hh ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.hh ppl_ocaml_Pointset_Powerset_C_Polyhedron.hh ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.hh
required_instantiations_ocaml_cxx_objects = ppl_ocaml_Polyhedron.o ppl_ocaml_Grid.o ppl_ocaml_Rational_Box.o ppl_ocaml_BD_Shape_mpz_class.o ppl_ocaml_BD_Shape_mpq_class.o ppl_ocaml_Octagonal_Shape_mpz_class.o ppl_ocaml_Octagonal_Shape_mpq_class.o ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.o ppl_ocaml_Pointset_Powerset_C_Polyhedron.o ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.o
required_instantiations_ocaml_cxx_sources = ppl_ocaml_Polyhedron.cc ppl_ocaml_Grid.cc ppl_ocaml_Rational_Box.cc ppl_ocaml_BD_Shape_mpz_class.cc ppl_ocaml_BD_Shape_mpq_class.cc ppl_ocaml_Octagonal_Shape_mpz_class.cc ppl_ocaml_Octagonal_Shape_mpq_class.cc ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.cc ppl_ocaml_Pointset_Powerset_C_Polyhedron.cc ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.cc
required_instantiations_prolog_cxx_headers = ppl_prolog_Polyhedron.hh ppl_prolog_Grid.hh ppl_prolog_Rational_Box.hh ppl_prolog_BD_Shape_mpz_class.hh ppl_prolog_BD_Shape_mpq_class.hh ppl_prolog_Octagonal_Shape_mpz_class.hh ppl_prolog_Octagonal_Shape_mpq_class.hh ppl_prolog_Constraints_Product_C_Polyhedron_Grid.hh ppl_prolog_Pointset_Powerset_C_Polyhedron.hh ppl_prolog_Pointset_Powerset_NNC_Polyhedron.hh
required_instantiations_prolog_cxx_objects = ppl_prolog_Polyhedron.lo ppl_prolog_Grid.lo ppl_prolog_Rational_Box.lo ppl_prolog_BD_Shape_mpz_class.lo ppl_prolog_BD_Shape_mpq_class.lo ppl_prolog_Octagonal_Shape_mpz_class.lo ppl_prolog_Octagonal_Shape_mpq_class.lo ppl_prolog_Constraints_Product_C_Polyhedron_Grid.lo ppl_prolog_Pointset_Powerset_C_Polyhedron.lo ppl_prolog_Pointset_Powerset_NNC_Polyhedron.lo
required_instantiations_prolog_cxx_sources = ppl_prolog_Polyhedron.cc ppl_prolog_Grid.cc ppl_prolog_Rational_Box.cc ppl_prolog_BD_Shape_mpz_class.cc ppl_prolog_BD_Shape_mpq_class.cc ppl_prolog_Octagonal_Shape_mpz_class.cc ppl_prolog_Octagonal_Shape_mpq_class.cc ppl_prolog_Constraints_Product_C_Polyhedron_Grid.cc ppl_prolog_Pointset_Powerset_C_Polyhedron.cc ppl_prolog_Pointset_Powerset_NNC_Polyhedron.cc
required_instantiations_prolog_generated_test_sources = ppl_prolog_generated_test_Polyhedron.pl ppl_prolog_generated_test_Grid.pl ppl_prolog_generated_test_Rational_Box.pl ppl_prolog_generated_test_BD_Shape_mpz_class.pl ppl_prolog_generated_test_BD_Shape_mpq_class.pl ppl_prolog_generated_test_Octagonal_Shape_mpz_class.pl ppl_prolog_generated_test_Octagonal_Shape_mpq_class.pl ppl_prolog_generated_test_Constraints_Product_C_Polyhedron_Grid.pl ppl_prolog_generated_test_Pointset_Powerset_C_Polyhedron.pl ppl_prolog_generated_test_Pointset_Powerset_NNC_Polyhedron.pl
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sicstus_prolog = 
srcdir = .
swi_prolog = 
swi_prolog_ld = 
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
uudecode = yes
xsb_prolog = 
yap_prolog = 
CHECKER = 
#CHECKER = \
#libtool --mode=execute \
#$(VALGRIND) --tool=memcheck -q --trace-children=yes --leak-check=yes \
#--num-callers=40 --leak-resolution=high \
#--suppressions=$(top_srcdir)/tests/valgrind_suppressions

TESTS_ENVIRONMENT = $(CHECKER)
AM_CPPFLAGS = \
-I$(top_builddir)/src \
-I$(top_srcdir)/src -I$(top_srcdir)/tests \
-I$(top_srcdir)/utils \
-I/opt/homebrew/include \
-DNDEBUG=1

LDADD = \
$(top_builddir)/utils/libppl_utils.a \
$(top_builddir)/tests/libppl_tests.a \
$(top_builddir)/src/libppl.la \
-L/opt/homebrew/lib -lgmpxx -lgmp


#
# Sources for the tests
#
addcongruence1_SOURCES = addcongruence1.cc
addcongruences1_SOURCES = addcongruences1.cc
addconstraint1_SOURCES = addconstraint1.cc
addconstraints1_SOURCES = addconstraints1.cc
addgenerator1_SOURCES = addgenerator1.cc
addgenerators1_SOURCES = addgenerators1.cc
addspacedims1_SOURCES = addspacedims1.cc
affinedim1_SOURCES = affinedim1.cc
affineimage1_SOURCES = affineimage1.cc
affineimage2_SOURCES = affineimage2.cc
affinepreimage1_SOURCES = affinepreimage1.cc
affinepreimage2_SOURCES = affinepreimage2.cc
approximatepartition1_SOURCES = approximatepartition1.cc
asciidumpload1_SOURCES = asciidumpload1.cc
asciidumpload2_SOURCES = asciidumpload2.cc
asciidumpload3_SOURCES = asciidumpload3.cc
asciidumpload4_SOURCES = asciidumpload4.cc
asciidumpload5_SOURCES = asciidumpload5.cc
asciidumpload6_SOURCES = asciidumpload6.cc
bhz03widening1_SOURCES = bhz03widening1.cc
bounded1_SOURCES = bounded1.cc
bounds1_SOURCES = bounds1.cc
boundedaffineimage1_SOURCES = boundedaffineimage1.cc
boundedaffinepreimage1_SOURCES = boundedaffinepreimage1.cc
certificate1_SOURCES = certificate1.cc
concatenate1_SOURCES = concatenate1.cc
congruence1_SOURCES = congruence1.cc
congruences1_SOURCES = congruences1.cc
congruences2_SOURCES = congruences2.cc
constraints1_SOURCES = constraints1.cc
contains1_SOURCES = contains1.cc
containsintegerpoint1_SOURCES = containsintegerpoint1.cc
discrete1_SOURCES = discrete1.cc
disjoint1_SOURCES = disjoint1.cc
dropnonintegerpoints1_SOURCES = dropnonintegerpoints1.cc
equals1_SOURCES = equals1.cc
expandspacedim1_SOURCES = expandspacedim1.cc
frequency1_SOURCES = frequency1.cc
frombdshape1_SOURCES = frombdshape1.cc
frombox1_SOURCES = frombox1.cc
fromgrid1_SOURCES = fromgrid1.cc
fromoctagonalshape1_SOURCES = fromoctagonalshape1.cc
frompolyhedron1_SOURCES = frompolyhedron1.cc
foldspacedims1_SOURCES = foldspacedims1.cc
generalizedaffineimage1_SOURCES = generalizedaffineimage1.cc
generalizedaffineimage2_SOURCES = generalizedaffineimage2.cc
generalizedaffineimage3_SOURCES = generalizedaffineimage3.cc
generalizedaffinepreimage1_SOURCES = generalizedaffinepreimage1.cc
generalizedaffinepreimage2_SOURCES = generalizedaffinepreimage2.cc
generalizedaffinepreimage3_SOURCES = generalizedaffinepreimage3.cc
generator1_SOURCES = generator1.cc
generators1_SOURCES = generators1.cc
generators2_SOURCES = generators2.cc
grid1_SOURCES = grid1.cc
grid2_SOURCES = grid2.cc
grid3_SOURCES = grid3.cc
griddifference1_SOURCES = griddifference1.cc
intersection1_SOURCES = intersection1.cc
isempty1_SOURCES = isempty1.cc
isuniverse1_SOURCES = isuniverse1.cc
limitedextrapolation1_SOURCES = limitedextrapolation1.cc
limitedextrapolation2_SOURCES = limitedextrapolation2.cc
limitedextrapolation3_SOURCES = limitedextrapolation3.cc
mapspacedims1_SOURCES = mapspacedims1.cc
maxmin1_SOURCES = maxmin1.cc
membytes1_SOURCES = membytes1.cc
mincongruences1_SOURCES = mincongruences1.cc
mingenerators1_SOURCES = mingenerators1.cc
outputoperator1_SOURCES = outputoperator1.cc
outputoperator2_SOURCES = outputoperator2.cc
outputoperator3_SOURCES = outputoperator3.cc
partition1_SOURCES = partition1.cc
powersetdifference1_SOURCES = powersetdifference1.cc
powersetgeometricallycovers1_SOURCES = powersetgeometricallycovers1.cc
powersetgeometricallyequals1_SOURCES = powersetgeometricallyequals1.cc
refinewithcongruences1_SOURCES = refinewithcongruences1.cc
refinewithconstraints1_SOURCES = refinewithconstraints1.cc
relations1_SOURCES = relations1.cc
relations2_SOURCES = relations2.cc
relations3_SOURCES = relations3.cc
removespacedims1_SOURCES = removespacedims1.cc
removespacedims2_SOURCES = removespacedims2.cc
simplifyusingcontext1_SOURCES = simplifyusingcontext1.cc
timeelapse1_SOURCES = timeelapse1.cc
topclosed1_SOURCES = topclosed1.cc
topclosure1_SOURCES = topclosure1.cc
unconstrain1_SOURCES = unconstrain1.cc
upperbound1_SOURCES = upperbound1.cc
upperbound2_SOURCES = upperbound2.cc
widening1_SOURCES = widening1.cc
widening2_SOURCES = widening2.cc
widening3_SOURCES = widening3.cc
writecongruencesystem_SOURCES = writecongruencesystem.cc
wrap1_SOURCES = wrap1.cc
MOSTLYCLEANFILES = \
ascii_dump_load1.dat \
ascii_dump_load2.dat \
ascii_dump_load3.dat \
ascii_dump_load4.dat \
ascii_dump_load5.dat \
ascii_dump_load6.dat

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Grid/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Grid/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

addcongruence1$(EXEEXT): $(addcongruence1_OBJECTS) $(addcongruence1_DEPENDENCIES) $(EXTRA_addcongruence1_DEPENDENCIES) 
	@rm -f addcongruence1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addcongruence1_OBJECTS) $(addcongruence1_LDADD) $(LIBS)

addcongruences1$(EXEEXT): $(addcongruences1_OBJECTS) $(addcongruences1_DEPENDENCIES) $(EXTRA_addcongruences1_DEPENDENCIES) 
	@rm -f addcongruences1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addcongruences1_OBJECTS) $(addcongruences1_LDADD) $(LIBS)

addconstraint1$(EXEEXT): $(addconstraint1_OBJECTS) $(addconstraint1_DEPENDENCIES) $(EXTRA_addconstraint1_DEPENDENCIES) 
	@rm -f addconstraint1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addconstraint1_OBJECTS) $(addconstraint1_LDADD) $(LIBS)

addconstraints1$(EXEEXT): $(addconstraints1_OBJECTS) $(addconstraints1_DEPENDENCIES) $(EXTRA_addconstraints1_DEPENDENCIES) 
	@rm -f addconstraints1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addconstraints1_OBJECTS) $(addconstraints1_LDADD) $(LIBS)

addgenerator1$(EXEEXT): $(addgenerator1_OBJECTS) $(addgenerator1_DEPENDENCIES) $(EXTRA_addgenerator1_DEPENDENCIES) 
	@rm -f addgenerator1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addgenerator1_OBJECTS) $(addgenerator1_LDADD) $(LIBS)

addgenerators1$(EXEEXT): $(addgenerators1_OBJECTS) $(addgenerators1_DEPENDENCIES) $(EXTRA_addgenerators1_DEPENDENCIES) 
	@rm -f addgenerators1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addgenerators1_OBJECTS) $(addgenerators1_LDADD) $(LIBS)

addspacedims1$(EXEEXT): $(addspacedims1_OBJECTS) $(addspacedims1_DEPENDENCIES) $(EXTRA_addspacedims1_DEPENDENCIES) 
	@rm -f addspacedims1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addspacedims1_OBJECTS) $(addspacedims1_LDADD) $(LIBS)

affinedim1$(EXEEXT): $(affinedim1_OBJECTS) $(affinedim1_DEPENDENCIES) $(EXTRA_affinedim1_DEPENDENCIES) 
	@rm -f affinedim1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affinedim1_OBJECTS) $(affinedim1_LDADD) $(LIBS)

affineimage1$(EXEEXT): $(affineimage1_OBJECTS) $(affineimage1_DEPENDENCIES) $(EXTRA_affineimage1_DEPENDENCIES) 
	@rm -f affineimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affineimage1_OBJECTS) $(affineimage1_LDADD) $(LIBS)

affineimage2$(EXEEXT): $(affineimage2_OBJECTS) $(affineimage2_DEPENDENCIES) $(EXTRA_affineimage2_DEPENDENCIES) 
	@rm -f affineimage2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affineimage2_OBJECTS) $(affineimage2_LDADD) $(LIBS)

affinepreimage1$(EXEEXT): $(affinepreimage1_OBJECTS) $(affinepreimage1_DEPENDENCIES) $(EXTRA_affinepreimage1_DEPENDENCIES) 
	@rm -f affinepreimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affinepreimage1_OBJECTS) $(affinepreimage1_LDADD) $(LIBS)

affinepreimage2$(EXEEXT): $(affinepreimage2_OBJECTS) $(affinepreimage2_DEPENDENCIES) $(EXTRA_affinepreimage2_DEPENDENCIES) 
	@rm -f affinepreimage2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affinepreimage2_OBJECTS) $(affinepreimage2_LDADD) $(LIBS)

approximatepartition1$(EXEEXT): $(approximatepartition1_OBJECTS) $(approximatepartition1_DEPENDENCIES) $(EXTRA_approximatepartition1_DEPENDENCIES) 
	@rm -f approximatepartition1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(approximatepartition1_OBJECTS) $(approximatepartition1_LDADD) $(LIBS)

asciidumpload1$(EXEEXT): $(asciidumpload1_OBJECTS) $(asciidumpload1_DEPENDENCIES) $(EXTRA_asciidumpload1_DEPENDENCIES) 
	@rm -f asciidumpload1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(asciidumpload1_OBJECTS) $(asciidumpload1_LDADD) $(LIBS)

asciidumpload2$(EXEEXT): $(asciidumpload2_OBJECTS) $(asciidumpload2_DEPENDENCIES) $(EXTRA_asciidumpload2_DEPENDENCIES) 
	@rm -f asciidumpload2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(asciidumpload2_OBJECTS) $(asciidumpload2_LDADD) $(LIBS)

asciidumpload3$(EXEEXT): $(asciidumpload3_OBJECTS) $(asciidumpload3_DEPENDENCIES) $(EXTRA_asciidumpload3_DEPENDENCIES) 
	@rm -f asciidumpload3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(asciidumpload3_OBJECTS) $(asciidumpload3_LDADD) $(LIBS)

asciidumpload4$(EXEEXT): $(asciidumpload4_OBJECTS) $(asciidumpload4_DEPENDENCIES) $(EXTRA_asciidumpload4_DEPENDENCIES) 
	@rm -f asciidumpload4$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(asciidumpload4_OBJECTS) $(asciidumpload4_LDADD) $(LIBS)

asciidumpload5$(EXEEXT): $(asciidumpload5_OBJECTS) $(asciidumpload5_DEPENDENCIES) $(EXTRA_asciidumpload5_DEPENDENCIES) 
	@rm -f asciidumpload5$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(asciidumpload5_OBJECTS) $(asciidumpload5_LDADD) $(LIBS)

asciidumpload6$(EXEEXT): $(asciidumpload6_OBJECTS) $(asciidumpload6_DEPENDENCIES) $(EXTRA_asciidumpload6_DEPENDENCIES) 
	@rm -f asciidumpload6$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(asciidumpload6_OBJECTS) $(asciidumpload6_LDADD) $(LIBS)

bhz03widening1$(EXEEXT): $(bhz03widening1_OBJECTS) $(bhz03widening1_DEPENDENCIES) $(EXTRA_bhz03widening1_DEPENDENCIES) 
	@rm -f bhz03widening1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bhz03widening1_OBJECTS) $(bhz03widening1_LDADD) $(LIBS)

bounded1$(EXEEXT): $(bounded1_OBJECTS) $(bounded1_DEPENDENCIES) $(EXTRA_bounded1_DEPENDENCIES) 
	@rm -f bounded1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bounded1_OBJECTS) $(bounded1_LDADD) $(LIBS)

boundedaffineimage1$(EXEEXT): $(boundedaffineimage1_OBJECTS) $(boundedaffineimage1_DEPENDENCIES) $(EXTRA_boundedaffineimage1_DEPENDENCIES) 
	@rm -f boundedaffineimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(boundedaffineimage1_OBJECTS) $(boundedaffineimage1_LDADD) $(LIBS)

boundedaffinepreimage1$(EXEEXT): $(boundedaffinepreimage1_OBJECTS) $(boundedaffinepreimage1_DEPENDENCIES) $(EXTRA_boundedaffinepreimage1_DEPENDENCIES) 
	@rm -f boundedaffinepreimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(boundedaffinepreimage1_OBJECTS) $(boundedaffinepreimage1_LDADD) $(LIBS)

bounds1$(EXEEXT): $(bounds1_OBJECTS) $(bounds1_DEPENDENCIES) $(EXTRA_bounds1_DEPENDENCIES) 
	@rm -f bounds1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bounds1_OBJECTS) $(bounds1_LDADD) $(LIBS)

certificate1$(EXEEXT): $(certificate1_OBJECTS) $(certificate1_DEPENDENCIES) $(EXTRA_certificate1_DEPENDENCIES) 
	@rm -f certificate1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(certificate1_OBJECTS) $(certificate1_LDADD) $(LIBS)

concatenate1$(EXEEXT): $(concatenate1_OBJECTS) $(concatenate1_DEPENDENCIES) $(EXTRA_concatenate1_DEPENDENCIES) 
	@rm -f concatenate1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(concatenate1_OBJECTS) $(concatenate1_LDADD) $(LIBS)

congruence1$(EXEEXT): $(congruence1_OBJECTS) $(congruence1_DEPENDENCIES) $(EXTRA_congruence1_DEPENDENCIES) 
	@rm -f congruence1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(congruence1_OBJECTS) $(congruence1_LDADD) $(LIBS)

congruences1$(EXEEXT): $(congruences1_OBJECTS) $(congruences1_DEPENDENCIES) $(EXTRA_congruences1_DEPENDENCIES) 
	@rm -f congruences1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(congruences1_OBJECTS) $(congruences1_LDADD) $(LIBS)

congruences2$(EXEEXT): $(congruences2_OBJECTS) $(congruences2_DEPENDENCIES) $(EXTRA_congruences2_DEPENDENCIES) 
	@rm -f congruences2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(congruences2_OBJECTS) $(congruences2_LDADD) $(LIBS)

constraints1$(EXEEXT): $(constraints1_OBJECTS) $(constraints1_DEPENDENCIES) $(EXTRA_constraints1_DEPENDENCIES) 
	@rm -f constraints1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(constraints1_OBJECTS) $(constraints1_LDADD) $(LIBS)

contains1$(EXEEXT): $(contains1_OBJECTS) $(contains1_DEPENDENCIES) $(EXTRA_contains1_DEPENDENCIES) 
	@rm -f contains1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(contains1_OBJECTS) $(contains1_LDADD) $(LIBS)

containsintegerpoint1$(EXEEXT): $(containsintegerpoint1_OBJECTS) $(containsintegerpoint1_DEPENDENCIES) $(EXTRA_containsintegerpoint1_DEPENDENCIES) 
	@rm -f containsintegerpoint1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(containsintegerpoint1_OBJECTS) $(containsintegerpoint1_LDADD) $(LIBS)

discrete1$(EXEEXT): $(discrete1_OBJECTS) $(discrete1_DEPENDENCIES) $(EXTRA_discrete1_DEPENDENCIES) 
	@rm -f discrete1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(discrete1_OBJECTS) $(discrete1_LDADD) $(LIBS)

disjoint1$(EXEEXT): $(disjoint1_OBJECTS) $(disjoint1_DEPENDENCIES) $(EXTRA_disjoint1_DEPENDENCIES) 
	@rm -f disjoint1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(disjoint1_OBJECTS) $(disjoint1_LDADD) $(LIBS)

dropnonintegerpoints1$(EXEEXT): $(dropnonintegerpoints1_OBJECTS) $(dropnonintegerpoints1_DEPENDENCIES) $(EXTRA_dropnonintegerpoints1_DEPENDENCIES) 
	@rm -f dropnonintegerpoints1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dropnonintegerpoints1_OBJECTS) $(dropnonintegerpoints1_LDADD) $(LIBS)

equals1$(EXEEXT): $(equals1_OBJECTS) $(equals1_DEPENDENCIES) $(EXTRA_equals1_DEPENDENCIES) 
	@rm -f equals1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(equals1_OBJECTS) $(equals1_LDADD) $(LIBS)

expandspacedim1$(EXEEXT): $(expandspacedim1_OBJECTS) $(expandspacedim1_DEPENDENCIES) $(EXTRA_expandspacedim1_DEPENDENCIES) 
	@rm -f expandspacedim1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(expandspacedim1_OBJECTS) $(expandspacedim1_LDADD) $(LIBS)

foldspacedims1$(EXEEXT): $(foldspacedims1_OBJECTS) $(foldspacedims1_DEPENDENCIES) $(EXTRA_foldspacedims1_DEPENDENCIES) 
	@rm -f foldspacedims1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(foldspacedims1_OBJECTS) $(foldspacedims1_LDADD) $(LIBS)

frequency1$(EXEEXT): $(frequency1_OBJECTS) $(frequency1_DEPENDENCIES) $(EXTRA_frequency1_DEPENDENCIES) 
	@rm -f frequency1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(frequency1_OBJECTS) $(frequency1_LDADD) $(LIBS)

frombdshape1$(EXEEXT): $(frombdshape1_OBJECTS) $(frombdshape1_DEPENDENCIES) $(EXTRA_frombdshape1_DEPENDENCIES) 
	@rm -f frombdshape1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(frombdshape1_OBJECTS) $(frombdshape1_LDADD) $(LIBS)

frombox1$(EXEEXT): $(frombox1_OBJECTS) $(frombox1_DEPENDENCIES) $(EXTRA_frombox1_DEPENDENCIES) 
	@rm -f frombox1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(frombox1_OBJECTS) $(frombox1_LDADD) $(LIBS)

fromgrid1$(EXEEXT): $(fromgrid1_OBJECTS) $(fromgrid1_DEPENDENCIES) $(EXTRA_fromgrid1_DEPENDENCIES) 
	@rm -f fromgrid1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fromgrid1_OBJECTS) $(fromgrid1_LDADD) $(LIBS)

fromoctagonalshape1$(EXEEXT): $(fromoctagonalshape1_OBJECTS) $(fromoctagonalshape1_DEPENDENCIES) $(EXTRA_fromoctagonalshape1_DEPENDENCIES) 
	@rm -f fromoctagonalshape1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fromoctagonalshape1_OBJECTS) $(fromoctagonalshape1_LDADD) $(LIBS)

frompolyhedron1$(EXEEXT): $(frompolyhedron1_OBJECTS) $(frompolyhedron1_DEPENDENCIES) $(EXTRA_frompolyhedron1_DEPENDENCIES) 
	@rm -f frompolyhedron1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(frompolyhedron1_OBJECTS) $(frompolyhedron1_LDADD) $(LIBS)

generalizedaffineimage1$(EXEEXT): $(generalizedaffineimage1_OBJECTS) $(generalizedaffineimage1_DEPENDENCIES) $(EXTRA_generalizedaffineimage1_DEPENDENCIES) 
	@rm -f generalizedaffineimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generalizedaffineimage1_OBJECTS) $(generalizedaffineimage1_LDADD) $(LIBS)

generalizedaffineimage2$(EXEEXT): $(generalizedaffineimage2_OBJECTS) $(generalizedaffineimage2_DEPENDENCIES) $(EXTRA_generalizedaffineimage2_DEPENDENCIES) 
	@rm -f generalizedaffineimage2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generalizedaffineimage2_OBJECTS) $(generalizedaffineimage2_LDADD) $(LIBS)

generalizedaffineimage3$(EXEEXT): $(generalizedaffineimage3_OBJECTS) $(generalizedaffineimage3_DEPENDENCIES) $(EXTRA_generalizedaffineimage3_DEPENDENCIES) 
	@rm -f generalizedaffineimage3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generalizedaffineimage3_OBJECTS) $(generalizedaffineimage3_LDADD) $(LIBS)

generalizedaffinepreimage1$(EXEEXT): $(generalizedaffinepreimage1_OBJECTS) $(generalizedaffinepreimage1_DEPENDENCIES) $(EXTRA_generalizedaffinepreimage1_DEPENDENCIES) 
	@rm -f generalizedaffinepreimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generalizedaffinepreimage1_OBJECTS) $(generalizedaffinepreimage1_LDADD) $(LIBS)

generalizedaffinepreimage2$(EXEEXT): $(generalizedaffinepreimage2_OBJECTS) $(generalizedaffinepreimage2_DEPENDENCIES) $(EXTRA_generalizedaffinepreimage2_DEPENDENCIES) 
	@rm -f generalizedaffinepreimage2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generalizedaffinepreimage2_OBJECTS) $(generalizedaffinepreimage2_LDADD) $(LIBS)

generalizedaffinepreimage3$(EXEEXT): $(generalizedaffinepreimage3_OBJECTS) $(generalizedaffinepreimage3_DEPENDENCIES) $(EXTRA_generalizedaffinepreimage3_DEPENDENCIES) 
	@rm -f generalizedaffinepreimage3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generalizedaffinepreimage3_OBJECTS) $(generalizedaffinepreimage3_LDADD) $(LIBS)

generator1$(EXEEXT): $(generator1_OBJECTS) $(generator1_DEPENDENCIES) $(EXTRA_generator1_DEPENDENCIES) 
	@rm -f generator1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generator1_OBJECTS) $(generator1_LDADD) $(LIBS)

generators1$(EXEEXT): $(generators1_OBJECTS) $(generators1_DEPENDENCIES) $(EXTRA_generators1_DEPENDENCIES) 
	@rm -f generators1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generators1_OBJECTS) $(generators1_LDADD) $(LIBS)

generators2$(EXEEXT): $(generators2_OBJECTS) $(generators2_DEPENDENCIES) $(EXTRA_generators2_DEPENDENCIES) 
	@rm -f generators2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generators2_OBJECTS) $(generators2_LDADD) $(LIBS)

grid1$(EXEEXT): $(grid1_OBJECTS) $(grid1_DEPENDENCIES) $(EXTRA_grid1_DEPENDENCIES) 
	@rm -f grid1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(grid1_OBJECTS) $(grid1_LDADD) $(LIBS)

grid2$(EXEEXT): $(grid2_OBJECTS) $(grid2_DEPENDENCIES) $(EXTRA_grid2_DEPENDENCIES) 
	@rm -f grid2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(grid2_OBJECTS) $(grid2_LDADD) $(LIBS)

grid3$(EXEEXT): $(grid3_OBJECTS) $(grid3_DEPENDENCIES) $(EXTRA_grid3_DEPENDENCIES) 
	@rm -f grid3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(grid3_OBJECTS) $(grid3_LDADD) $(LIBS)

griddifference1$(EXEEXT): $(griddifference1_OBJECTS) $(griddifference1_DEPENDENCIES) $(EXTRA_griddifference1_DEPENDENCIES) 
	@rm -f griddifference1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(griddifference1_OBJECTS) $(griddifference1_LDADD) $(LIBS)

intersection1$(EXEEXT): $(intersection1_OBJECTS) $(intersection1_DEPENDENCIES) $(EXTRA_intersection1_DEPENDENCIES) 
	@rm -f intersection1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(intersection1_OBJECTS) $(intersection1_LDADD) $(LIBS)

isempty1$(EXEEXT): $(isempty1_OBJECTS) $(isempty1_DEPENDENCIES) $(EXTRA_isempty1_DEPENDENCIES) 
	@rm -f isempty1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(isempty1_OBJECTS) $(isempty1_LDADD) $(LIBS)

isuniverse1$(EXEEXT): $(isuniverse1_OBJECTS) $(isuniverse1_DEPENDENCIES) $(EXTRA_isuniverse1_DEPENDENCIES) 
	@rm -f isuniverse1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(isuniverse1_OBJECTS) $(isuniverse1_LDADD) $(LIBS)

limitedextrapolation1$(EXEEXT): $(limitedextrapolation1_OBJECTS) $(limitedextrapolation1_DEPENDENCIES) $(EXTRA_limitedextrapolation1_DEPENDENCIES) 
	@rm -f limitedextrapolation1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(limitedextrapolation1_OBJECTS) $(limitedextrapolation1_LDADD) $(LIBS)

limitedextrapolation2$(EXEEXT): $(limitedextrapolation2_OBJECTS) $(limitedextrapolation2_DEPENDENCIES) $(EXTRA_limitedextrapolation2_DEPENDENCIES) 
	@rm -f limitedextrapolation2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(limitedextrapolation2_OBJECTS) $(limitedextrapolation2_LDADD) $(LIBS)

limitedextrapolation3$(EXEEXT): $(limitedextrapolation3_OBJECTS) $(limitedextrapolation3_DEPENDENCIES) $(EXTRA_limitedextrapolation3_DEPENDENCIES) 
	@rm -f limitedextrapolation3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(limitedextrapolation3_OBJECTS) $(limitedextrapolation3_LDADD) $(LIBS)

mapspacedims1$(EXEEXT): $(mapspacedims1_OBJECTS) $(mapspacedims1_DEPENDENCIES) $(EXTRA_mapspacedims1_DEPENDENCIES) 
	@rm -f mapspacedims1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mapspacedims1_OBJECTS) $(mapspacedims1_LDADD) $(LIBS)

maxmin1$(EXEEXT): $(maxmin1_OBJECTS) $(maxmin1_DEPENDENCIES) $(EXTRA_maxmin1_DEPENDENCIES) 
	@rm -f maxmin1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(maxmin1_OBJECTS) $(maxmin1_LDADD) $(LIBS)

membytes1$(EXEEXT): $(membytes1_OBJECTS) $(membytes1_DEPENDENCIES) $(EXTRA_membytes1_DEPENDENCIES) 
	@rm -f membytes1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(membytes1_OBJECTS) $(membytes1_LDADD) $(LIBS)

mincongruences1$(EXEEXT): $(mincongruences1_OBJECTS) $(mincongruences1_DEPENDENCIES) $(EXTRA_mincongruences1_DEPENDENCIES) 
	@rm -f mincongruences1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mincongruences1_OBJECTS) $(mincongruences1_LDADD) $(LIBS)

mingenerators1$(EXEEXT): $(mingenerators1_OBJECTS) $(mingenerators1_DEPENDENCIES) $(EXTRA_mingenerators1_DEPENDENCIES) 
	@rm -f mingenerators1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mingenerators1_OBJECTS) $(mingenerators1_LDADD) $(LIBS)

outputoperator1$(EXEEXT): $(outputoperator1_OBJECTS) $(outputoperator1_DEPENDENCIES) $(EXTRA_outputoperator1_DEPENDENCIES) 
	@rm -f outputoperator1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(outputoperator1_OBJECTS) $(outputoperator1_LDADD) $(LIBS)

outputoperator2$(EXEEXT): $(outputoperator2_OBJECTS) $(outputoperator2_DEPENDENCIES) $(EXTRA_outputoperator2_DEPENDENCIES) 
	@rm -f outputoperator2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(outputoperator2_OBJECTS) $(outputoperator2_LDADD) $(LIBS)

outputoperator3$(EXEEXT): $(outputoperator3_OBJECTS) $(outputoperator3_DEPENDENCIES) $(EXTRA_outputoperator3_DEPENDENCIES) 
	@rm -f outputoperator3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(outputoperator3_OBJECTS) $(outputoperator3_LDADD) $(LIBS)

partition1$(EXEEXT): $(partition1_OBJECTS) $(partition1_DEPENDENCIES) $(EXTRA_partition1_DEPENDENCIES) 
	@rm -f partition1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(partition1_OBJECTS) $(partition1_LDADD) $(LIBS)

powersetdifference1$(EXEEXT): $(powersetdifference1_OBJECTS) $(powersetdifference1_DEPENDENCIES) $(EXTRA_powersetdifference1_DEPENDENCIES) 
	@rm -f powersetdifference1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(powersetdifference1_OBJECTS) $(powersetdifference1_LDADD) $(LIBS)

powersetgeometricallycovers1$(EXEEXT): $(powersetgeometricallycovers1_OBJECTS) $(powersetgeometricallycovers1_DEPENDENCIES) $(EXTRA_powersetgeometricallycovers1_DEPENDENCIES) 
	@rm -f powersetgeometricallycovers1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(powersetgeometricallycovers1_OBJECTS) $(powersetgeometricallycovers1_LDADD) $(LIBS)

powersetgeometricallyequals1$(EXEEXT): $(powersetgeometricallyequals1_OBJECTS) $(powersetgeometricallyequals1_DEPENDENCIES) $(EXTRA_powersetgeometricallyequals1_DEPENDENCIES) 
	@rm -f powersetgeometricallyequals1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(powersetgeometricallyequals1_OBJECTS) $(powersetgeometricallyequals1_LDADD) $(LIBS)

refinewithcongruences1$(EXEEXT): $(refinewithcongruences1_OBJECTS) $(refinewithcongruences1_DEPENDENCIES) $(EXTRA_refinewithcongruences1_DEPENDENCIES) 
	@rm -f refinewithcongruences1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(refinewithcongruences1_OBJECTS) $(refinewithcongruences1_LDADD) $(LIBS)

refinewithconstraints1$(EXEEXT): $(refinewithconstraints1_OBJECTS) $(refinewithconstraints1_DEPENDENCIES) $(EXTRA_refinewithconstraints1_DEPENDENCIES) 
	@rm -f refinewithconstraints1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(refinewithconstraints1_OBJECTS) $(refinewithconstraints1_LDADD) $(LIBS)

relations1$(EXEEXT): $(relations1_OBJECTS) $(relations1_DEPENDENCIES) $(EXTRA_relations1_DEPENDENCIES) 
	@rm -f relations1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(relations1_OBJECTS) $(relations1_LDADD) $(LIBS)

relations2$(EXEEXT): $(relations2_OBJECTS) $(relations2_DEPENDENCIES) $(EXTRA_relations2_DEPENDENCIES) 
	@rm -f relations2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(relations2_OBJECTS) $(relations2_LDADD) $(LIBS)

relations3$(EXEEXT): $(relations3_OBJECTS) $(relations3_DEPENDENCIES) $(EXTRA_relations3_DEPENDENCIES) 
	@rm -f relations3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(relations3_OBJECTS) $(relations3_LDADD) $(LIBS)

removespacedims1$(EXEEXT): $(removespacedims1_OBJECTS) $(removespacedims1_DEPENDENCIES) $(EXTRA_removespacedims1_DEPENDENCIES) 
	@rm -f removespacedims1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(removespacedims1_OBJECTS) $(removespacedims1_LDADD) $(LIBS)

removespacedims2$(EXEEXT): $(removespacedims2_OBJECTS) $(removespacedims2_DEPENDENCIES) $(EXTRA_removespacedims2_DEPENDENCIES) 
	@rm -f removespacedims2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(removespacedims2_OBJECTS) $(removespacedims2_LDADD) $(LIBS)

simplifyusingcontext1$(EXEEXT): $(simplifyusingcontext1_OBJECTS) $(simplifyusingcontext1_DEPENDENCIES) $(EXTRA_simplifyusingcontext1_DEPENDENCIES) 
	@rm -f simplifyusingcontext1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(simplifyusingcontext1_OBJECTS) $(simplifyusingcontext1_LDADD) $(LIBS)

timeelapse1$(EXEEXT): $(timeelapse1_OBJECTS) $(timeelapse1_DEPENDENCIES) $(EXTRA_timeelapse1_DEPENDENCIES) 
	@rm -f timeelapse1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(timeelapse1_OBJECTS) $(timeelapse1_LDADD) $(LIBS)

topclosed1$(EXEEXT): $(topclosed1_OBJECTS) $(topclosed1_DEPENDENCIES) $(EXTRA_topclosed1_DEPENDENCIES) 
	@rm -f topclosed1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(topclosed1_OBJECTS) $(topclosed1_LDADD) $(LIBS)

topclosure1$(EXEEXT): $(topclosure1_OBJECTS) $(topclosure1_DEPENDENCIES) $(EXTRA_topclosure1_DEPENDENCIES) 
	@rm -f topclosure1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(topclosure1_OBJECTS) $(topclosure1_LDADD) $(LIBS)

unconstrain1$(EXEEXT): $(unconstrain1_OBJECTS) $(unconstrain1_DEPENDENCIES) $(EXTRA_unconstrain1_DEPENDENCIES) 
	@rm -f unconstrain1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unconstrain1_OBJECTS) $(unconstrain1_LDADD) $(LIBS)

upperbound1$(EXEEXT): $(upperbound1_OBJECTS) $(upperbound1_DEPENDENCIES) $(EXTRA_upperbound1_DEPENDENCIES) 
	@rm -f upperbound1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(upperbound1_OBJECTS) $(upperbound1_LDADD) $(LIBS)

upperbound2$(EXEEXT): $(upperbound2_OBJECTS) $(upperbound2_DEPENDENCIES) $(EXTRA_upperbound2_DEPENDENCIES) 
	@rm -f upperbound2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(upperbound2_OBJECTS) $(upperbound2_LDADD) $(LIBS)

widening1$(EXEEXT): $(widening1_OBJECTS) $(widening1_DEPENDENCIES) $(EXTRA_widening1_DEPENDENCIES) 
	@rm -f widening1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(widening1_OBJECTS) $(widening1_LDADD) $(LIBS)

widening2$(EXEEXT): $(widening2_OBJECTS) $(widening2_DEPENDENCIES) $(EXTRA_widening2_DEPENDENCIES) 
	@rm -f widening2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(widening2_OBJECTS) $(widening2_LDADD) $(LIBS)

widening3$(EXEEXT): $(widening3_OBJECTS) $(widening3_DEPENDENCIES) $(EXTRA_widening3_DEPENDENCIES) 
	@rm -f widening3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(widening3_OBJECTS) $(widening3_LDADD) $(LIBS)

wrap1$(EXEEXT): $(wrap1_OBJECTS) $(wrap1_DEPENDENCIES) $(EXTRA_wrap1_DEPENDENCIES) 
	@rm -f wrap1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wrap1_OBJECTS) $(wrap1_LDADD) $(LIBS)

writecongruencesystem$(EXEEXT): $(writecongruencesystem_OBJECTS) $(writecongruencesystem_DEPENDENCIES) $(EXTRA_writecongruencesystem_DEPENDENCIES) 
	@rm -f writecongruencesystem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(writecongruencesystem_OBJECTS) $(writecongruencesystem_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/addcongruence1.Po # am--include-marker
include ./$(DEPDIR)/addcongruences1.Po # am--include-marker
include ./$(DEPDIR)/addconstraint1.Po # am--include-marker
include ./$(DEPDIR)/addconstraints1.Po # am--include-marker
include ./$(DEPDIR)/addgenerator1.Po # am--include-marker
include ./$(DEPDIR)/addgenerators1.Po # am--include-marker
include ./$(DEPDIR)/addspacedims1.Po # am--include-marker
include ./$(DEPDIR)/affinedim1.Po # am--include-marker
include ./$(DEPDIR)/affineimage1.Po # am--include-marker
include ./$(DEPDIR)/affineimage2.Po # am--include-marker
include ./$(DEPDIR)/affinepreimage1.Po # am--include-marker
include ./$(DEPDIR)/affinepreimage2.Po # am--include-marker
include ./$(DEPDIR)/approximatepartition1.Po # am--include-marker
include ./$(DEPDIR)/asciidumpload1.Po # am--include-marker
include ./$(DEPDIR)/asciidumpload2.Po # am--include-marker
include ./$(DEPDIR)/asciidumpload3.Po # am--include-marker
include ./$(DEPDIR)/asciidumpload4.Po # am--include-marker
include ./$(DEPDIR)/asciidumpload5.Po # am--include-marker
include ./$(DEPDIR)/asciidumpload6.Po # am--include-marker
include ./$(DEPDIR)/bhz03widening1.Po # am--include-marker
include ./$(DEPDIR)/bounded1.Po # am--include-marker
include ./$(DEPDIR)/boundedaffineimage1.Po # am--include-marker
include ./$(DEPDIR)/boundedaffinepreimage1.Po # am--include-marker
include ./$(DEPDIR)/bounds1.Po # am--include-marker
include ./$(DEPDIR)/certificate1.Po # am--include-marker
include ./$(DEPDIR)/concatenate1.Po # am--include-marker
include ./$(DEPDIR)/congruence1.Po # am--include-marker
include ./$(DEPDIR)/congruences1.Po # am--include-marker
include ./$(DEPDIR)/congruences2.Po # am--include-marker
include ./$(DEPDIR)/constraints1.Po # am--include-marker
include ./$(DEPDIR)/contains1.Po # am--include-marker
include ./$(DEPDIR)/containsintegerpoint1.Po # am--include-marker
include ./$(DEPDIR)/discrete1.Po # am--include-marker
include ./$(DEPDIR)/disjoint1.Po # am--include-marker
include ./$(DEPDIR)/dropnonintegerpoints1.Po # am--include-marker
include ./$(DEPDIR)/equals1.Po # am--include-marker
include ./$(DEPDIR)/expandspacedim1.Po # am--include-marker
include ./$(DEPDIR)/foldspacedims1.Po # am--include-marker
include ./$(DEPDIR)/frequency1.Po # am--include-marker
include ./$(DEPDIR)/frombdshape1.Po # am--include-marker
include ./$(DEPDIR)/frombox1.Po # am--include-marker
include ./$(DEPDIR)/fromgrid1.Po # am--include-marker
include ./$(DEPDIR)/fromoctagonalshape1.Po # am--include-marker
include ./$(DEPDIR)/frompolyhedron1.Po # am--include-marker
include ./$(DEPDIR)/generalizedaffineimage1.Po # am--include-marker
include ./$(DEPDIR)/generalizedaffineimage2.Po # am--include-marker
include ./$(DEPDIR)/generalizedaffineimage3.Po # am--include-marker
include ./$(DEPDIR)/generalizedaffinepreimage1.Po # am--include-marker
include ./$(DEPDIR)/generalizedaffinepreimage2.Po # am--include-marker
include ./$(DEPDIR)/generalizedaffinepreimage3.Po # am--include-marker
include ./$(DEPDIR)/generator1.Po # am--include-marker
include ./$(DEPDIR)/generators1.Po # am--include-marker
include ./$(DEPDIR)/generators2.Po # am--include-marker
include ./$(DEPDIR)/grid1.Po # am--include-marker
include ./$(DEPDIR)/grid2.Po # am--include-marker
include ./$(DEPDIR)/grid3.Po # am--include-marker
include ./$(DEPDIR)/griddifference1.Po # am--include-marker
include ./$(DEPDIR)/intersection1.Po # am--include-marker
include ./$(DEPDIR)/isempty1.Po # am--include-marker
include ./$(DEPDIR)/isuniverse1.Po # am--include-marker
include ./$(DEPDIR)/limitedextrapolation1.Po # am--include-marker
include ./$(DEPDIR)/limitedextrapolation2.Po # am--include-marker
include ./$(DEPDIR)/limitedextrapolation3.Po # am--include-marker
include ./$(DEPDIR)/mapspacedims1.Po # am--include-marker
include ./$(DEPDIR)/maxmin1.Po # am--include-marker
include ./$(DEPDIR)/membytes1.Po # am--include-marker
include ./$(DEPDIR)/mincongruences1.Po # am--include-marker
include ./$(DEPDIR)/mingenerators1.Po # am--include-marker
include ./$(DEPDIR)/outputoperator1.Po # am--include-marker
include ./$(DEPDIR)/outputoperator2.Po # am--include-marker
include ./$(DEPDIR)/outputoperator3.Po # am--include-marker
include ./$(DEPDIR)/partition1.Po # am--include-marker
include ./$(DEPDIR)/powersetdifference1.Po # am--include-marker
include ./$(DEPDIR)/powersetgeometricallycovers1.Po # am--include-marker
include ./$(DEPDIR)/powersetgeometricallyequals1.Po # am--include-marker
include ./$(DEPDIR)/refinewithcongruences1.Po # am--include-marker
include ./$(DEPDIR)/refinewithconstraints1.Po # am--include-marker
include ./$(DEPDIR)/relations1.Po # am--include-marker
include ./$(DEPDIR)/relations2.Po # am--include-marker
include ./$(DEPDIR)/relations3.Po # am--include-marker
include ./$(DEPDIR)/removespacedims1.Po # am--include-marker
include ./$(DEPDIR)/removespacedims2.Po # am--include-marker
include ./$(DEPDIR)/simplifyusingcontext1.Po # am--include-marker
include ./$(DEPDIR)/timeelapse1.Po # am--include-marker
include ./$(DEPDIR)/topclosed1.Po # am--include-marker
include ./$(DEPDIR)/topclosure1.Po # am--include-marker
include ./$(DEPDIR)/unconstrain1.Po # am--include-marker
include ./$(DEPDIR)/upperbound1.Po # am--include-marker
include ./$(DEPDIR)/upperbound2.Po # am--include-marker
include ./$(DEPDIR)/widening1.Po # am--include-marker
include ./$(DEPDIR)/widening2.Po # am--include-marker
include ./$(DEPDIR)/widening3.Po # am--include-marker
include ./$(DEPDIR)/wrap1.Po # am--include-marker
include ./$(DEPDIR)/writecongruencesystem.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
addcongruence1.log: addcongruence1$(EXEEXT)
	@p='addcongruence1$(EXEEXT)'; \
	b='addcongruence1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addcongruences1.log: addcongruences1$(EXEEXT)
	@p='addcongruences1$(EXEEXT)'; \
	b='addcongruences1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addconstraint1.log: addconstraint1$(EXEEXT)
	@p='addconstraint1$(EXEEXT)'; \
	b='addconstraint1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addconstraints1.log: addconstraints1$(EXEEXT)
	@p='addconstraints1$(EXEEXT)'; \
	b='addconstraints1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addgenerator1.log: addgenerator1$(EXEEXT)
	@p='addgenerator1$(EXEEXT)'; \
	b='addgenerator1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addgenerators1.log: addgenerators1$(EXEEXT)
	@p='addgenerators1$(EXEEXT)'; \
	b='addgenerators1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addspacedims1.log: addspacedims1$(EXEEXT)
	@p='addspacedims1$(EXEEXT)'; \
	b='addspacedims1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affinedim1.log: affinedim1$(EXEEXT)
	@p='affinedim1$(EXEEXT)'; \
	b='affinedim1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affineimage1.log: affineimage1$(EXEEXT)
	@p='affineimage1$(EXEEXT)'; \
	b='affineimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affineimage2.log: affineimage2$(EXEEXT)
	@p='affineimage2$(EXEEXT)'; \
	b='affineimage2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affinepreimage1.log: affinepreimage1$(EXEEXT)
	@p='affinepreimage1$(EXEEXT)'; \
	b='affinepreimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affinepreimage2.log: affinepreimage2$(EXEEXT)
	@p='affinepreimage2$(EXEEXT)'; \
	b='affinepreimage2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
approximatepartition1.log: approximatepartition1$(EXEEXT)
	@p='approximatepartition1$(EXEEXT)'; \
	b='approximatepartition1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
asciidumpload1.log: asciidumpload1$(EXEEXT)
	@p='asciidumpload1$(EXEEXT)'; \
	b='asciidumpload1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
asciidumpload2.log: asciidumpload2$(EXEEXT)
	@p='asciidumpload2$(EXEEXT)'; \
	b='asciidumpload2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
asciidumpload3.log: asciidumpload3$(EXEEXT)
	@p='asciidumpload3$(EXEEXT)'; \
	b='asciidumpload3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
asciidumpload4.log: asciidumpload4$(EXEEXT)
	@p='asciidumpload4$(EXEEXT)'; \
	b='asciidumpload4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
asciidumpload5.log: asciidumpload5$(EXEEXT)
	@p='asciidumpload5$(EXEEXT)'; \
	b='asciidumpload5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
asciidumpload6.log: asciidumpload6$(EXEEXT)
	@p='asciidumpload6$(EXEEXT)'; \
	b='asciidumpload6'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bhz03widening1.log: bhz03widening1$(EXEEXT)
	@p='bhz03widening1$(EXEEXT)'; \
	b='bhz03widening1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bounded1.log: bounded1$(EXEEXT)
	@p='bounded1$(EXEEXT)'; \
	b='bounded1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bounds1.log: bounds1$(EXEEXT)
	@p='bounds1$(EXEEXT)'; \
	b='bounds1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
boundedaffineimage1.log: boundedaffineimage1$(EXEEXT)
	@p='boundedaffineimage1$(EXEEXT)'; \
	b='boundedaffineimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
boundedaffinepreimage1.log: boundedaffinepreimage1$(EXEEXT)
	@p='boundedaffinepreimage1$(EXEEXT)'; \
	b='boundedaffinepreimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
certificate1.log: certificate1$(EXEEXT)
	@p='certificate1$(EXEEXT)'; \
	b='certificate1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
concatenate1.log: concatenate1$(EXEEXT)
	@p='concatenate1$(EXEEXT)'; \
	b='concatenate1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
congruence1.log: congruence1$(EXEEXT)
	@p='congruence1$(EXEEXT)'; \
	b='congruence1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
congruences1.log: congruences1$(EXEEXT)
	@p='congruences1$(EXEEXT)'; \
	b='congruences1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
congruences2.log: congruences2$(EXEEXT)
	@p='congruences2$(EXEEXT)'; \
	b='congruences2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
constraints1.log: constraints1$(EXEEXT)
	@p='constraints1$(EXEEXT)'; \
	b='constraints1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
contains1.log: contains1$(EXEEXT)
	@p='contains1$(EXEEXT)'; \
	b='contains1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
containsintegerpoint1.log: containsintegerpoint1$(EXEEXT)
	@p='containsintegerpoint1$(EXEEXT)'; \
	b='containsintegerpoint1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
discrete1.log: discrete1$(EXEEXT)
	@p='discrete1$(EXEEXT)'; \
	b='discrete1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disjoint1.log: disjoint1$(EXEEXT)
	@p='disjoint1$(EXEEXT)'; \
	b='disjoint1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dropnonintegerpoints1.log: dropnonintegerpoints1$(EXEEXT)
	@p='dropnonintegerpoints1$(EXEEXT)'; \
	b='dropnonintegerpoints1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
equals1.log: equals1$(EXEEXT)
	@p='equals1$(EXEEXT)'; \
	b='equals1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
expandspacedim1.log: expandspacedim1$(EXEEXT)
	@p='expandspacedim1$(EXEEXT)'; \
	b='expandspacedim1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
foldspacedims1.log: foldspacedims1$(EXEEXT)
	@p='foldspacedims1$(EXEEXT)'; \
	b='foldspacedims1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frequency1.log: frequency1$(EXEEXT)
	@p='frequency1$(EXEEXT)'; \
	b='frequency1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frombdshape1.log: frombdshape1$(EXEEXT)
	@p='frombdshape1$(EXEEXT)'; \
	b='frombdshape1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frombox1.log: frombox1$(EXEEXT)
	@p='frombox1$(EXEEXT)'; \
	b='frombox1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fromgrid1.log: fromgrid1$(EXEEXT)
	@p='fromgrid1$(EXEEXT)'; \
	b='fromgrid1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fromoctagonalshape1.log: fromoctagonalshape1$(EXEEXT)
	@p='fromoctagonalshape1$(EXEEXT)'; \
	b='fromoctagonalshape1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frompolyhedron1.log: frompolyhedron1$(EXEEXT)
	@p='frompolyhedron1$(EXEEXT)'; \
	b='frompolyhedron1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generalizedaffineimage1.log: generalizedaffineimage1$(EXEEXT)
	@p='generalizedaffineimage1$(EXEEXT)'; \
	b='generalizedaffineimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generalizedaffineimage2.log: generalizedaffineimage2$(EXEEXT)
	@p='generalizedaffineimage2$(EXEEXT)'; \
	b='generalizedaffineimage2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generalizedaffineimage3.log: generalizedaffineimage3$(EXEEXT)
	@p='generalizedaffineimage3$(EXEEXT)'; \
	b='generalizedaffineimage3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generalizedaffinepreimage1.log: generalizedaffinepreimage1$(EXEEXT)
	@p='generalizedaffinepreimage1$(EXEEXT)'; \
	b='generalizedaffinepreimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generalizedaffinepreimage2.log: generalizedaffinepreimage2$(EXEEXT)
	@p='generalizedaffinepreimage2$(EXEEXT)'; \
	b='generalizedaffinepreimage2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generalizedaffinepreimage3.log: generalizedaffinepreimage3$(EXEEXT)
	@p='generalizedaffinepreimage3$(EXEEXT)'; \
	b='generalizedaffinepreimage3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generator1.log: generator1$(EXEEXT)
	@p='generator1$(EXEEXT)'; \
	b='generator1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generators1.log: generators1$(EXEEXT)
	@p='generators1$(EXEEXT)'; \
	b='generators1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
generators2.log: generators2$(EXEEXT)
	@p='generators2$(EXEEXT)'; \
	b='generators2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
grid1.log: grid1$(EXEEXT)
	@p='grid1$(EXEEXT)'; \
	b='grid1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
grid2.log: grid2$(EXEEXT)
	@p='grid2$(EXEEXT)'; \
	b='grid2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
grid3.log: grid3$(EXEEXT)
	@p='grid3$(EXEEXT)'; \
	b='grid3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
griddifference1.log: griddifference1$(EXEEXT)
	@p='griddifference1$(EXEEXT)'; \
	b='griddifference1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
intersection1.log: intersection1$(EXEEXT)
	@p='intersection1$(EXEEXT)'; \
	b='intersection1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
isempty1.log: isempty1$(EXEEXT)
	@p='isempty1$(EXEEXT)'; \
	b='isempty1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
isuniverse1.log: isuniverse1$(EXEEXT)
	@p='isuniverse1$(EXEEXT)'; \
	b='isuniverse1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
limitedextrapolation1.log: limitedextrapolation1$(EXEEXT)
	@p='limitedextrapolation1$(EXEEXT)'; \
	b='limitedextrapolation1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
limitedextrapolation2.log: limitedextrapolation2$(EXEEXT)
	@p='limitedextrapolation2$(EXEEXT)'; \
	b='limitedextrapolation2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
limitedextrapolation3.log: limitedextrapolation3$(EXEEXT)
	@p='limitedextrapolation3$(EXEEXT)'; \
	b='limitedextrapolation3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mapspacedims1.log: mapspacedims1$(EXEEXT)
	@p='mapspacedims1$(EXEEXT)'; \
	b='mapspacedims1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
maxmin1.log: maxmin1$(EXEEXT)
	@p='maxmin1$(EXEEXT)'; \
	b='maxmin1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
membytes1.log: membytes1$(EXEEXT)
	@p='membytes1$(EXEEXT)'; \
	b='membytes1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mingenerators1.log: mingenerators1$(EXEEXT)
	@p='mingenerators1$(EXEEXT)'; \
	b='mingenerators1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mincongruences1.log: mincongruences1$(EXEEXT)
	@p='mincongruences1$(EXEEXT)'; \
	b='mincongruences1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
outputoperator1.log: outputoperator1$(EXEEXT)
	@p='outputoperator1$(EXEEXT)'; \
	b='outputoperator1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
outputoperator2.log: outputoperator2$(EXEEXT)
	@p='outputoperator2$(EXEEXT)'; \
	b='outputoperator2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
outputoperator3.log: outputoperator3$(EXEEXT)
	@p='outputoperator3$(EXEEXT)'; \
	b='outputoperator3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
partition1.log: partition1$(EXEEXT)
	@p='partition1$(EXEEXT)'; \
	b='partition1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
powersetdifference1.log: powersetdifference1$(EXEEXT)
	@p='powersetdifference1$(EXEEXT)'; \
	b='powersetdifference1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
powersetgeometricallycovers1.log: powersetgeometricallycovers1$(EXEEXT)
	@p='powersetgeometricallycovers1$(EXEEXT)'; \
	b='powersetgeometricallycovers1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
powersetgeometricallyequals1.log: powersetgeometricallyequals1$(EXEEXT)
	@p='powersetgeometricallyequals1$(EXEEXT)'; \
	b='powersetgeometricallyequals1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
refinewithcongruences1.log: refinewithcongruences1$(EXEEXT)
	@p='refinewithcongruences1$(EXEEXT)'; \
	b='refinewithcongruences1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
refinewithconstraints1.log: refinewithconstraints1$(EXEEXT)
	@p='refinewithconstraints1$(EXEEXT)'; \
	b='refinewithconstraints1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
relations1.log: relations1$(EXEEXT)
	@p='relations1$(EXEEXT)'; \
	b='relations1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
relations2.log: relations2$(EXEEXT)
	@p='relations2$(EXEEXT)'; \
	b='relations2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
relations3.log: relations3$(EXEEXT)
	@p='relations3$(EXEEXT)'; \
	b='relations3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
removespacedims1.log: removespacedims1$(EXEEXT)
	@p='removespacedims1$(EXEEXT)'; \
	b='removespacedims1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
removespacedims2.log: removespacedims2$(EXEEXT)
	@p='removespacedims2$(EXEEXT)'; \
	b='removespacedims2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
simplifyusingcontext1.log: simplifyusingcontext1$(EXEEXT)
	@p='simplifyusingcontext1$(EXEEXT)'; \
	b='simplifyusingcontext1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timeelapse1.log: timeelapse1$(EXEEXT)
	@p='timeelapse1$(EXEEXT)'; \
	b='timeelapse1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
topclosed1.log: topclosed1$(EXEEXT)
	@p='topclosed1$(EXEEXT)'; \
	b='topclosed1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
topclosure1.log: topclosure1$(EXEEXT)
	@p='topclosure1$(EXEEXT)'; \
	b='topclosure1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unconstrain1.log: unconstrain1$(EXEEXT)
	@p='unconstrain1$(EXEEXT)'; \
	b='unconstrain1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
upperbound1.log: upperbound1$(EXEEXT)
	@p='upperbound1$(EXEEXT)'; \
	b='upperbound1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
upperbound2.log: upperbound2$(EXEEXT)
	@p='upperbound2$(EXEEXT)'; \
	b='upperbound2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
widening1.log: widening1$(EXEEXT)
	@p='widening1$(EXEEXT)'; \
	b='widening1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
widening2.log: widening2$(EXEEXT)
	@p='widening2$(EXEEXT)'; \
	b='widening2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
widening3.log: widening3$(EXEEXT)
	@p='widening3$(EXEEXT)'; \
	b='widening3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wrap1.log: wrap1$(EXEEXT)
	@p='wrap1$(EXEEXT)'; \
	b='wrap1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
writecongruencesystem.log: writecongruencesystem$(EXEEXT)
	@p='writecongruencesystem$(EXEEXT)'; \
	b='writecongruencesystem'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/addcongruence1.Po
	-rm -f ./$(DEPDIR)/addcongruences1.Po
	-rm -f ./$(DEPDIR)/addconstraint1.Po
	-rm -f ./$(DEPDIR)/addconstraints1.Po
	-rm -f ./$(DEPDIR)/addgenerator1.Po
	-rm -f ./$(DEPDIR)/addgenerators1.Po
	-rm -f ./$(DEPDIR)/addspacedims1.Po
	-rm -f ./$(DEPDIR)/affinedim1.Po
	-rm -f ./$(DEPDIR)/affineimage1.Po
	-rm -f ./$(DEPDIR)/affineimage2.Po
	-rm -f ./$(DEPDIR)/affinepreimage1.Po
	-rm -f ./$(DEPDIR)/affinepreimage2.Po
	-rm -f ./$(DEPDIR)/approximatepartition1.Po
	-rm -f ./$(DEPDIR)/asciidumpload1.Po
	-rm -f ./$(DEPDIR)/asciidumpload2.Po
	-rm -f ./$(DEPDIR)/asciidumpload3.Po
	-rm -f ./$(DEPDIR)/asciidumpload4.Po
	-rm -f ./$(DEPDIR)/asciidumpload5.Po
	-rm -f ./$(DEPDIR)/asciidumpload6.Po
	-rm -f ./$(DEPDIR)/bhz03widening1.Po
	-rm -f ./$(DEPDIR)/bounded1.Po
	-rm -f ./$(DEPDIR)/boundedaffineimage1.Po
	-rm -f ./$(DEPDIR)/boundedaffinepreimage1.Po
	-rm -f ./$(DEPDIR)/bounds1.Po
	-rm -f ./$(DEPDIR)/certificate1.Po
	-rm -f ./$(DEPDIR)/concatenate1.Po
	-rm -f ./$(DEPDIR)/congruence1.Po
	-rm -f ./$(DEPDIR)/congruences1.Po
	-rm -f ./$(DEPDIR)/congruences2.Po
	-rm -f ./$(DEPDIR)/constraints1.Po
	-rm -f ./$(DEPDIR)/contains1.Po
	-rm -f ./$(DEPDIR)/containsintegerpoint1.Po
	-rm -f ./$(DEPDIR)/discrete1.Po
	-rm -f ./$(DEPDIR)/disjoint1.Po
	-rm -f ./$(DEPDIR)/dropnonintegerpoints1.Po
	-rm -f ./$(DEPDIR)/equals1.Po
	-rm -f ./$(DEPDIR)/expandspacedim1.Po
	-rm -f ./$(DEPDIR)/foldspacedims1.Po
	-rm -f ./$(DEPDIR)/frequency1.Po
	-rm -f ./$(DEPDIR)/frombdshape1.Po
	-rm -f ./$(DEPDIR)/frombox1.Po
	-rm -f ./$(DEPDIR)/fromgrid1.Po
	-rm -f ./$(DEPDIR)/fromoctagonalshape1.Po
	-rm -f ./$(DEPDIR)/frompolyhedron1.Po
	-rm -f ./$(DEPDIR)/generalizedaffineimage1.Po
	-rm -f ./$(DEPDIR)/generalizedaffineimage2.Po
	-rm -f ./$(DEPDIR)/generalizedaffineimage3.Po
	-rm -f ./$(DEPDIR)/generalizedaffinepreimage1.Po
	-rm -f ./$(DEPDIR)/generalizedaffinepreimage2.Po
	-rm -f ./$(DEPDIR)/generalizedaffinepreimage3.Po
	-rm -f ./$(DEPDIR)/generator1.Po
	-rm -f ./$(DEPDIR)/generators1.Po
	-rm -f ./$(DEPDIR)/generators2.Po
	-rm -f ./$(DEPDIR)/grid1.Po
	-rm -f ./$(DEPDIR)/grid2.Po
	-rm -f ./$(DEPDIR)/grid3.Po
	-rm -f ./$(DEPDIR)/griddifference1.Po
	-rm -f ./$(DEPDIR)/intersection1.Po
	-rm -f ./$(DEPDIR)/isempty1.Po
	-rm -f ./$(DEPDIR)/isuniverse1.Po
	-rm -f ./$(DEPDIR)/limitedextrapolation1.Po
	-rm -f ./$(DEPDIR)/limitedextrapolation2.Po
	-rm -f ./$(DEPDIR)/limitedextrapolation3.Po
	-rm -f ./$(DEPDIR)/mapspacedims1.Po
	-rm -f ./$(DEPDIR)/maxmin1.Po
	-rm -f ./$(DEPDIR)/membytes1.Po
	-rm -f ./$(DEPDIR)/mincongruences1.Po
	-rm -f ./$(DEPDIR)/mingenerators1.Po
	-rm -f ./$(DEPDIR)/outputoperator1.Po
	-rm -f ./$(DEPDIR)/outputoperator2.Po
	-rm -f ./$(DEPDIR)/outputoperator3.Po
	-rm -f ./$(DEPDIR)/partition1.Po
	-rm -f ./$(DEPDIR)/powersetdifference1.Po
	-rm -f ./$(DEPDIR)/powersetgeometricallycovers1.Po
	-rm -f ./$(DEPDIR)/powersetgeometricallyequals1.Po
	-rm -f ./$(DEPDIR)/refinewithcongruences1.Po
	-rm -f ./$(DEPDIR)/refinewithconstraints1.Po
	-rm -f ./$(DEPDIR)/relations1.Po
	-rm -f ./$(DEPDIR)/relations2.Po
	-rm -f ./$(DEPDIR)/relations3.Po
	-rm -f ./$(DEPDIR)/removespacedims1.Po
	-rm -f ./$(DEPDIR)/removespacedims2.Po
	-rm -f ./$(DEPDIR)/simplifyusingcontext1.Po
	-rm -f ./$(DEPDIR)/timeelapse1.Po
	-rm -f ./$(DEPDIR)/topclosed1.Po
	-rm -f ./$(DEPDIR)/topclosure1.Po
	-rm -f ./$(DEPDIR)/unconstrain1.Po
	-rm -f ./$(DEPDIR)/upperbound1.Po
	-rm -f ./$(DEPDIR)/upperbound2.Po
	-rm -f ./$(DEPDIR)/widening1.Po
	-rm -f ./$(DEPDIR)/widening2.Po
	-rm -f ./$(DEPDIR)/widening3.Po
	-rm -f ./$(DEPDIR)/wrap1.Po
	-rm -f ./$(DEPDIR)/writecongruencesystem.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/addcongruence1.Po
	-rm -f ./$(DEPDIR)/addcongruences1.Po
	-rm -f ./$(DEPDIR)/addconstraint1.Po
	-rm -f ./$(DEPDIR)/addconstraints1.Po
	-rm -f ./$(DEPDIR)/addgenerator1.Po
	-rm -f ./$(DEPDIR)/addgenerators1.Po
	-rm -f ./$(DEPDIR)/addspacedims1.Po
	-rm -f ./$(DEPDIR)/affinedim1.Po
	-rm -f ./$(DEPDIR)/affineimage1.Po
	-rm -f ./$(DEPDIR)/affineimage2.Po
	-rm -f ./$(DEPDIR)/affinepreimage1.Po
	-rm -f ./$(DEPDIR)/affinepreimage2.Po
	-rm -f ./$(DEPDIR)/approximatepartition1.Po
	-rm -f ./$(DEPDIR)/asciidumpload1.Po
	-rm -f ./$(DEPDIR)/asciidumpload2.Po
	-rm -f ./$(DEPDIR)/asciidumpload3.Po
	-rm -f ./$(DEPDIR)/asciidumpload4.Po
	-rm -f ./$(DEPDIR)/asciidumpload5.Po
	-rm -f ./$(DEPDIR)/asciidumpload6.Po
	-rm -f ./$(DEPDIR)/bhz03widening1.Po
	-rm -f ./$(DEPDIR)/bounded1.Po
	-rm -f ./$(DEPDIR)/boundedaffineimage1.Po
	-rm -f ./$(DEPDIR)/boundedaffinepreimage1.Po
	-rm -f ./$(DEPDIR)/bounds1.Po
	-rm -f ./$(DEPDIR)/certificate1.Po
	-rm -f ./$(DEPDIR)/concatenate1.Po
	-rm -f ./$(DEPDIR)/congruence1.Po
	-rm -f ./$(DEPDIR)/congruences1.Po
	-rm -f ./$(DEPDIR)/congruences2.Po
	-rm -f ./$(DEPDIR)/constraints1.Po
	-rm -f ./$(DEPDIR)/contains1.Po
	-rm -f ./$(DEPDIR)/containsintegerpoint1.Po
	-rm -f ./$(DEPDIR)/discrete1.Po
	-rm -f ./$(DEPDIR)/disjoint1.Po
	-rm -f ./$(DEPDIR)/dropnonintegerpoints1.Po
	-rm -f ./$(DEPDIR)/equals1.Po
	-rm -f ./$(DEPDIR)/expandspacedim1.Po
	-rm -f ./$(DEPDIR)/foldspacedims1.Po
	-rm -f ./$(DEPDIR)/frequency1.Po
	-rm -f ./$(DEPDIR)/frombdshape1.Po
	-rm -f ./$(DEPDIR)/frombox1.Po
	-rm -f ./$(DEPDIR)/fromgrid1.Po
	-rm -f ./$(DEPDIR)/fromoctagonalshape1.Po
	-rm -f ./$(DEPDIR)/frompolyhedron1.Po
	-rm -f ./$(DEPDIR)/generalizedaffineimage1.Po
	-rm -f ./$(DEPDIR)/generalizedaffineimage2.Po
	-rm -f ./$(DEPDIR)/generalizedaffineimage3.Po
	-rm -f ./$(DEPDIR)/generalizedaffinepreimage1.Po
	-rm -f ./$(DEPDIR)/generalizedaffinepreimage2.Po
	-rm -f ./$(DEPDIR)/generalizedaffinepreimage3.Po
	-rm -f ./$(DEPDIR)/generator1.Po
	-rm -f ./$(DEPDIR)/generators1.Po
	-rm -f ./$(DEPDIR)/generators2.Po
	-rm -f ./$(DEPDIR)/grid1.Po
	-rm -f ./$(DEPDIR)/grid2.Po
	-rm -f ./$(DEPDIR)/grid3.Po
	-rm -f ./$(DEPDIR)/griddifference1.Po
	-rm -f ./$(DEPDIR)/intersection1.Po
	-rm -f ./$(DEPDIR)/isempty1.Po
	-rm -f ./$(DEPDIR)/isuniverse1.Po
	-rm -f ./$(DEPDIR)/limitedextrapolation1.Po
	-rm -f ./$(DEPDIR)/limitedextrapolation2.Po
	-rm -f ./$(DEPDIR)/limitedextrapolation3.Po
	-rm -f ./$(DEPDIR)/mapspacedims1.Po
	-rm -f ./$(DEPDIR)/maxmin1.Po
	-rm -f ./$(DEPDIR)/membytes1.Po
	-rm -f ./$(DEPDIR)/mincongruences1.Po
	-rm -f ./$(DEPDIR)/mingenerators1.Po
	-rm -f ./$(DEPDIR)/outputoperator1.Po
	-rm -f ./$(DEPDIR)/outputoperator2.Po
	-rm -f ./$(DEPDIR)/outputoperator3.Po
	-rm -f ./$(DEPDIR)/partition1.Po
	-rm -f ./$(DEPDIR)/powersetdifference1.Po
	-rm -f ./$(DEPDIR)/powersetgeometricallycovers1.Po
	-rm -f ./$(DEPDIR)/powersetgeometricallyequals1.Po
	-rm -f ./$(DEPDIR)/refinewithcongruences1.Po
	-rm -f ./$(DEPDIR)/refinewithconstraints1.Po
	-rm -f ./$(DEPDIR)/relations1.Po
	-rm -f ./$(DEPDIR)/relations2.Po
	-rm -f ./$(DEPDIR)/relations3.Po
	-rm -f ./$(DEPDIR)/removespacedims1.Po
	-rm -f ./$(DEPDIR)/removespacedims2.Po
	-rm -f ./$(DEPDIR)/simplifyusingcontext1.Po
	-rm -f ./$(DEPDIR)/timeelapse1.Po
	-rm -f ./$(DEPDIR)/topclosed1.Po
	-rm -f ./$(DEPDIR)/topclosure1.Po
	-rm -f ./$(DEPDIR)/unconstrain1.Po
	-rm -f ./$(DEPDIR)/upperbound1.Po
	-rm -f ./$(DEPDIR)/upperbound2.Po
	-rm -f ./$(DEPDIR)/widening1.Po
	-rm -f ./$(DEPDIR)/widening2.Po
	-rm -f ./$(DEPDIR)/widening3.Po
	-rm -f ./$(DEPDIR)/wrap1.Po
	-rm -f ./$(DEPDIR)/writecongruencesystem.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


$(top_builddir)/utils/libppl_utils.a:
	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/utils libppl_utils.a

$(top_builddir)/tests/libppl_tests.a:
	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/tests libppl_tests.a

$(top_builddir)/src/libppl.la:
	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/src libppl.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
