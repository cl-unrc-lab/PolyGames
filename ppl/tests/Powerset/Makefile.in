# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Automake source file for the Parma Polyhedra Library.
# Copyright (C) 2001-2010 Roberto Bagnara <bagnara@cs.unipr.it>
# Copyright (C) 2010-2020 BUGSENG srl (http://bugseng.com)
#
# This file is part of the Parma Polyhedra Library (PPL).
#
# The PPL is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# The PPL is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02111-1307, USA.
#
# For the most up-to-date information see the Parma Polyhedra Library
# site: http://bugseng.com/products/ppl/ .
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = addcongruences1$(EXEEXT) addconstraints1$(EXEEXT) \
	affinedimension1$(EXEEXT) affineimage1$(EXEEXT) \
	affinepreimage1$(EXEEXT) bounded1$(EXEEXT) bounds1$(EXEEXT) \
	closed1$(EXEEXT) closure1$(EXEEXT) collapse1$(EXEEXT) \
	concatenate1$(EXEEXT) contains1$(EXEEXT) \
	containsintegerpoint1$(EXEEXT) difference1$(EXEEXT) \
	discrete1$(EXEEXT) disjoint1$(EXEEXT) disjunct1$(EXEEXT) \
	empty1$(EXEEXT) entails1$(EXEEXT) equals1$(EXEEXT) \
	frombdshape1$(EXEEXT) frombox1$(EXEEXT) \
	fromcongruences1$(EXEEXT) fromconstraints1$(EXEEXT) \
	fromgrid1$(EXEEXT) fromoctagonalshape1$(EXEEXT) \
	frompolyhedron1$(EXEEXT) fromspacedimension1$(EXEEXT) \
	intersection1$(EXEEXT) maxmin1$(EXEEXT) meet1$(EXEEXT) \
	membytes1$(EXEEXT) powerset1$(EXEEXT) reduce1$(EXEEXT) \
	refinewith1$(EXEEXT) relationwith1$(EXEEXT) \
	simplifyusingcontext1$(EXEEXT) size1$(EXEEXT) \
	spacedims1$(EXEEXT) universe1$(EXEEXT) upperbound1$(EXEEXT)
XFAIL_TESTS =
check_PROGRAMS = $(am__EXEEXT_1)
subdir = tests/Powerset
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_ciao.m4 \
	$(top_srcdir)/m4/ac_check_cxx11.m4 \
	$(top_srcdir)/m4/ac_check_fpu_control.m4 \
	$(top_srcdir)/m4/ac_check_gmp.m4 \
	$(top_srcdir)/m4/ac_check_sicstus_prolog.m4 \
	$(top_srcdir)/m4/ac_check_swi_prolog.m4 \
	$(top_srcdir)/m4/ac_check_xsb_prolog.m4 \
	$(top_srcdir)/m4/ac_check_yap.m4 \
	$(top_srcdir)/m4/ac_cxx_attribute_weak.m4 \
	$(top_srcdir)/m4/ac_cxx_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_float_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_ieee_inexact_flag.m4 \
	$(top_srcdir)/m4/ac_cxx_limit_memory.m4 \
	$(top_srcdir)/m4/ac_cxx_long_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_plain_char_is_signed.m4 \
	$(top_srcdir)/m4/ac_cxx_proper_long_double.m4 \
	$(top_srcdir)/m4/ac_cxx_zero_length_arrays.m4 \
	$(top_srcdir)/m4/ac_prog_jar.m4 \
	$(top_srcdir)/m4/ac_prog_java.m4 \
	$(top_srcdir)/m4/ac_prog_javac.m4 \
	$(top_srcdir)/m4/ac_text_md5sum.m4 \
	$(top_srcdir)/m4/ac_use_libtool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4.m4 $(top_srcdir)/m4/ocaml.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = addcongruences1$(EXEEXT) addconstraints1$(EXEEXT) \
	affinedimension1$(EXEEXT) affineimage1$(EXEEXT) \
	affinepreimage1$(EXEEXT) bounded1$(EXEEXT) bounds1$(EXEEXT) \
	closed1$(EXEEXT) closure1$(EXEEXT) collapse1$(EXEEXT) \
	concatenate1$(EXEEXT) contains1$(EXEEXT) \
	containsintegerpoint1$(EXEEXT) difference1$(EXEEXT) \
	discrete1$(EXEEXT) disjoint1$(EXEEXT) disjunct1$(EXEEXT) \
	empty1$(EXEEXT) entails1$(EXEEXT) equals1$(EXEEXT) \
	frombdshape1$(EXEEXT) frombox1$(EXEEXT) \
	fromcongruences1$(EXEEXT) fromconstraints1$(EXEEXT) \
	fromgrid1$(EXEEXT) fromoctagonalshape1$(EXEEXT) \
	frompolyhedron1$(EXEEXT) fromspacedimension1$(EXEEXT) \
	intersection1$(EXEEXT) maxmin1$(EXEEXT) meet1$(EXEEXT) \
	membytes1$(EXEEXT) powerset1$(EXEEXT) reduce1$(EXEEXT) \
	refinewith1$(EXEEXT) relationwith1$(EXEEXT) \
	simplifyusingcontext1$(EXEEXT) size1$(EXEEXT) \
	spacedims1$(EXEEXT) universe1$(EXEEXT) upperbound1$(EXEEXT)
am_addcongruences1_OBJECTS = addcongruences1.$(OBJEXT)
addcongruences1_OBJECTS = $(am_addcongruences1_OBJECTS)
addcongruences1_LDADD = $(LDADD)
addcongruences1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_addconstraints1_OBJECTS = addconstraints1.$(OBJEXT)
addconstraints1_OBJECTS = $(am_addconstraints1_OBJECTS)
addconstraints1_LDADD = $(LDADD)
addconstraints1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affinedimension1_OBJECTS = affinedimension1.$(OBJEXT)
affinedimension1_OBJECTS = $(am_affinedimension1_OBJECTS)
affinedimension1_LDADD = $(LDADD)
affinedimension1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affineimage1_OBJECTS = affineimage1.$(OBJEXT)
affineimage1_OBJECTS = $(am_affineimage1_OBJECTS)
affineimage1_LDADD = $(LDADD)
affineimage1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_affinepreimage1_OBJECTS = affinepreimage1.$(OBJEXT)
affinepreimage1_OBJECTS = $(am_affinepreimage1_OBJECTS)
affinepreimage1_LDADD = $(LDADD)
affinepreimage1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_bounded1_OBJECTS = bounded1.$(OBJEXT)
bounded1_OBJECTS = $(am_bounded1_OBJECTS)
bounded1_LDADD = $(LDADD)
bounded1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_bounds1_OBJECTS = bounds1.$(OBJEXT)
bounds1_OBJECTS = $(am_bounds1_OBJECTS)
bounds1_LDADD = $(LDADD)
bounds1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_closed1_OBJECTS = closed1.$(OBJEXT)
closed1_OBJECTS = $(am_closed1_OBJECTS)
closed1_LDADD = $(LDADD)
closed1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_closure1_OBJECTS = closure1.$(OBJEXT)
closure1_OBJECTS = $(am_closure1_OBJECTS)
closure1_LDADD = $(LDADD)
closure1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_collapse1_OBJECTS = collapse1.$(OBJEXT)
collapse1_OBJECTS = $(am_collapse1_OBJECTS)
collapse1_LDADD = $(LDADD)
collapse1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_concatenate1_OBJECTS = concatenate1.$(OBJEXT)
concatenate1_OBJECTS = $(am_concatenate1_OBJECTS)
concatenate1_LDADD = $(LDADD)
concatenate1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_contains1_OBJECTS = contains1.$(OBJEXT)
contains1_OBJECTS = $(am_contains1_OBJECTS)
contains1_LDADD = $(LDADD)
contains1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_containsintegerpoint1_OBJECTS = containsintegerpoint1.$(OBJEXT)
containsintegerpoint1_OBJECTS = $(am_containsintegerpoint1_OBJECTS)
containsintegerpoint1_LDADD = $(LDADD)
containsintegerpoint1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_difference1_OBJECTS = difference1.$(OBJEXT)
difference1_OBJECTS = $(am_difference1_OBJECTS)
difference1_LDADD = $(LDADD)
difference1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_discrete1_OBJECTS = discrete1.$(OBJEXT)
discrete1_OBJECTS = $(am_discrete1_OBJECTS)
discrete1_LDADD = $(LDADD)
discrete1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_disjoint1_OBJECTS = disjoint1.$(OBJEXT)
disjoint1_OBJECTS = $(am_disjoint1_OBJECTS)
disjoint1_LDADD = $(LDADD)
disjoint1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_disjunct1_OBJECTS = disjunct1.$(OBJEXT)
disjunct1_OBJECTS = $(am_disjunct1_OBJECTS)
disjunct1_LDADD = $(LDADD)
disjunct1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_empty1_OBJECTS = empty1.$(OBJEXT)
empty1_OBJECTS = $(am_empty1_OBJECTS)
empty1_LDADD = $(LDADD)
empty1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_entails1_OBJECTS = entails1.$(OBJEXT)
entails1_OBJECTS = $(am_entails1_OBJECTS)
entails1_LDADD = $(LDADD)
entails1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_equals1_OBJECTS = equals1.$(OBJEXT)
equals1_OBJECTS = $(am_equals1_OBJECTS)
equals1_LDADD = $(LDADD)
equals1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_frombdshape1_OBJECTS = frombdshape1.$(OBJEXT)
frombdshape1_OBJECTS = $(am_frombdshape1_OBJECTS)
frombdshape1_LDADD = $(LDADD)
frombdshape1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_frombox1_OBJECTS = frombox1.$(OBJEXT)
frombox1_OBJECTS = $(am_frombox1_OBJECTS)
frombox1_LDADD = $(LDADD)
frombox1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_fromcongruences1_OBJECTS = fromcongruences1.$(OBJEXT)
fromcongruences1_OBJECTS = $(am_fromcongruences1_OBJECTS)
fromcongruences1_LDADD = $(LDADD)
fromcongruences1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_fromconstraints1_OBJECTS = fromconstraints1.$(OBJEXT)
fromconstraints1_OBJECTS = $(am_fromconstraints1_OBJECTS)
fromconstraints1_LDADD = $(LDADD)
fromconstraints1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_fromgrid1_OBJECTS = fromgrid1.$(OBJEXT)
fromgrid1_OBJECTS = $(am_fromgrid1_OBJECTS)
fromgrid1_LDADD = $(LDADD)
fromgrid1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_fromoctagonalshape1_OBJECTS = fromoctagonalshape1.$(OBJEXT)
fromoctagonalshape1_OBJECTS = $(am_fromoctagonalshape1_OBJECTS)
fromoctagonalshape1_LDADD = $(LDADD)
fromoctagonalshape1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_frompolyhedron1_OBJECTS = frompolyhedron1.$(OBJEXT)
frompolyhedron1_OBJECTS = $(am_frompolyhedron1_OBJECTS)
frompolyhedron1_LDADD = $(LDADD)
frompolyhedron1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_fromspacedimension1_OBJECTS = fromspacedimension1.$(OBJEXT)
fromspacedimension1_OBJECTS = $(am_fromspacedimension1_OBJECTS)
fromspacedimension1_LDADD = $(LDADD)
fromspacedimension1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_intersection1_OBJECTS = intersection1.$(OBJEXT)
intersection1_OBJECTS = $(am_intersection1_OBJECTS)
intersection1_LDADD = $(LDADD)
intersection1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_maxmin1_OBJECTS = maxmin1.$(OBJEXT)
maxmin1_OBJECTS = $(am_maxmin1_OBJECTS)
maxmin1_LDADD = $(LDADD)
maxmin1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_meet1_OBJECTS = meet1.$(OBJEXT)
meet1_OBJECTS = $(am_meet1_OBJECTS)
meet1_LDADD = $(LDADD)
meet1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_membytes1_OBJECTS = membytes1.$(OBJEXT)
membytes1_OBJECTS = $(am_membytes1_OBJECTS)
membytes1_LDADD = $(LDADD)
membytes1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_powerset1_OBJECTS = powerset1.$(OBJEXT)
powerset1_OBJECTS = $(am_powerset1_OBJECTS)
powerset1_LDADD = $(LDADD)
powerset1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_reduce1_OBJECTS = reduce1.$(OBJEXT)
reduce1_OBJECTS = $(am_reduce1_OBJECTS)
reduce1_LDADD = $(LDADD)
reduce1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_refinewith1_OBJECTS = refinewith1.$(OBJEXT)
refinewith1_OBJECTS = $(am_refinewith1_OBJECTS)
refinewith1_LDADD = $(LDADD)
refinewith1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_relationwith1_OBJECTS = relationwith1.$(OBJEXT)
relationwith1_OBJECTS = $(am_relationwith1_OBJECTS)
relationwith1_LDADD = $(LDADD)
relationwith1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_simplifyusingcontext1_OBJECTS = simplifyusingcontext1.$(OBJEXT)
simplifyusingcontext1_OBJECTS = $(am_simplifyusingcontext1_OBJECTS)
simplifyusingcontext1_LDADD = $(LDADD)
simplifyusingcontext1_DEPENDENCIES =  \
	$(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_size1_OBJECTS = size1.$(OBJEXT)
size1_OBJECTS = $(am_size1_OBJECTS)
size1_LDADD = $(LDADD)
size1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_spacedims1_OBJECTS = spacedims1.$(OBJEXT)
spacedims1_OBJECTS = $(am_spacedims1_OBJECTS)
spacedims1_LDADD = $(LDADD)
spacedims1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_universe1_OBJECTS = universe1.$(OBJEXT)
universe1_OBJECTS = $(am_universe1_OBJECTS)
universe1_LDADD = $(LDADD)
universe1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
am_upperbound1_OBJECTS = upperbound1.$(OBJEXT)
upperbound1_OBJECTS = $(am_upperbound1_OBJECTS)
upperbound1_LDADD = $(LDADD)
upperbound1_DEPENDENCIES = $(top_builddir)/utils/libppl_utils.a \
	$(top_builddir)/tests/libppl_tests.a \
	$(top_builddir)/src/libppl.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/addcongruences1.Po \
	./$(DEPDIR)/addconstraints1.Po ./$(DEPDIR)/affinedimension1.Po \
	./$(DEPDIR)/affineimage1.Po ./$(DEPDIR)/affinepreimage1.Po \
	./$(DEPDIR)/bounded1.Po ./$(DEPDIR)/bounds1.Po \
	./$(DEPDIR)/closed1.Po ./$(DEPDIR)/closure1.Po \
	./$(DEPDIR)/collapse1.Po ./$(DEPDIR)/concatenate1.Po \
	./$(DEPDIR)/contains1.Po ./$(DEPDIR)/containsintegerpoint1.Po \
	./$(DEPDIR)/difference1.Po ./$(DEPDIR)/discrete1.Po \
	./$(DEPDIR)/disjoint1.Po ./$(DEPDIR)/disjunct1.Po \
	./$(DEPDIR)/empty1.Po ./$(DEPDIR)/entails1.Po \
	./$(DEPDIR)/equals1.Po ./$(DEPDIR)/frombdshape1.Po \
	./$(DEPDIR)/frombox1.Po ./$(DEPDIR)/fromcongruences1.Po \
	./$(DEPDIR)/fromconstraints1.Po ./$(DEPDIR)/fromgrid1.Po \
	./$(DEPDIR)/fromoctagonalshape1.Po \
	./$(DEPDIR)/frompolyhedron1.Po \
	./$(DEPDIR)/fromspacedimension1.Po \
	./$(DEPDIR)/intersection1.Po ./$(DEPDIR)/maxmin1.Po \
	./$(DEPDIR)/meet1.Po ./$(DEPDIR)/membytes1.Po \
	./$(DEPDIR)/powerset1.Po ./$(DEPDIR)/reduce1.Po \
	./$(DEPDIR)/refinewith1.Po ./$(DEPDIR)/relationwith1.Po \
	./$(DEPDIR)/simplifyusingcontext1.Po ./$(DEPDIR)/size1.Po \
	./$(DEPDIR)/spacedims1.Po ./$(DEPDIR)/universe1.Po \
	./$(DEPDIR)/upperbound1.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(addcongruences1_SOURCES) $(addconstraints1_SOURCES) \
	$(affinedimension1_SOURCES) $(affineimage1_SOURCES) \
	$(affinepreimage1_SOURCES) $(bounded1_SOURCES) \
	$(bounds1_SOURCES) $(closed1_SOURCES) $(closure1_SOURCES) \
	$(collapse1_SOURCES) $(concatenate1_SOURCES) \
	$(contains1_SOURCES) $(containsintegerpoint1_SOURCES) \
	$(difference1_SOURCES) $(discrete1_SOURCES) \
	$(disjoint1_SOURCES) $(disjunct1_SOURCES) $(empty1_SOURCES) \
	$(entails1_SOURCES) $(equals1_SOURCES) $(frombdshape1_SOURCES) \
	$(frombox1_SOURCES) $(fromcongruences1_SOURCES) \
	$(fromconstraints1_SOURCES) $(fromgrid1_SOURCES) \
	$(fromoctagonalshape1_SOURCES) $(frompolyhedron1_SOURCES) \
	$(fromspacedimension1_SOURCES) $(intersection1_SOURCES) \
	$(maxmin1_SOURCES) $(meet1_SOURCES) $(membytes1_SOURCES) \
	$(powerset1_SOURCES) $(reduce1_SOURCES) $(refinewith1_SOURCES) \
	$(relationwith1_SOURCES) $(simplifyusingcontext1_SOURCES) \
	$(size1_SOURCES) $(spacedims1_SOURCES) $(universe1_SOURCES) \
	$(upperbound1_SOURCES)
DIST_SOURCES = $(addcongruences1_SOURCES) $(addconstraints1_SOURCES) \
	$(affinedimension1_SOURCES) $(affineimage1_SOURCES) \
	$(affinepreimage1_SOURCES) $(bounded1_SOURCES) \
	$(bounds1_SOURCES) $(closed1_SOURCES) $(closure1_SOURCES) \
	$(collapse1_SOURCES) $(concatenate1_SOURCES) \
	$(contains1_SOURCES) $(containsintegerpoint1_SOURCES) \
	$(difference1_SOURCES) $(discrete1_SOURCES) \
	$(disjoint1_SOURCES) $(disjunct1_SOURCES) $(empty1_SOURCES) \
	$(entails1_SOURCES) $(equals1_SOURCES) $(frombdshape1_SOURCES) \
	$(frombox1_SOURCES) $(fromcongruences1_SOURCES) \
	$(fromconstraints1_SOURCES) $(fromgrid1_SOURCES) \
	$(fromoctagonalshape1_SOURCES) $(frompolyhedron1_SOURCES) \
	$(fromspacedimension1_SOURCES) $(intersection1_SOURCES) \
	$(maxmin1_SOURCES) $(meet1_SOURCES) $(membytes1_SOURCES) \
	$(powerset1_SOURCES) $(reduce1_SOURCES) $(refinewith1_SOURCES) \
	$(relationwith1_SOURCES) $(simplifyusingcontext1_SOURCES) \
	$(size1_SOURCES) $(spacedims1_SOURCES) $(universe1_SOURCES) \
	$(upperbound1_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs $(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CIAO_PROLOG = @CIAO_PROLOG@
CIAO_PROLOG_INCLUDE_OPTIONS = @CIAO_PROLOG_INCLUDE_OPTIONS@
CONFIGURE_OPTIONS = @CONFIGURE_OPTIONS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FILECMD = @FILECMD@
GNU_PROLOG = @GNU_PROLOG@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JNIFLAGS = @JNIFLAGS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBEXT = @LIBEXT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
M4 = @M4@
M4_DEBUGFILE = @M4_DEBUGFILE@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MD5SUM = @MD5SUM@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCAMLBEST = @OCAMLBEST@
OCAMLBUILD = @OCAMLBUILD@
OCAMLC = @OCAMLC@
OCAMLCDOTOPT = @OCAMLCDOTOPT@
OCAMLDEP = @OCAMLDEP@
OCAMLDOC = @OCAMLDOC@
OCAMLLIB = @OCAMLLIB@
OCAMLMKLIB = @OCAMLMKLIB@
OCAMLMKTOP = @OCAMLMKTOP@
OCAMLOPT = @OCAMLOPT@
OCAMLOPTDOTOPT = @OCAMLOPTDOTOPT@
OCAMLVERSION = @OCAMLVERSION@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PPL_VERSION_BETA = @PPL_VERSION_BETA@
PPL_VERSION_MAJOR = @PPL_VERSION_MAJOR@
PPL_VERSION_MINOR = @PPL_VERSION_MINOR@
PPL_VERSION_REVISION = @PPL_VERSION_REVISION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHREXT = @SHREXT@
SICSTUS_PROLOG_INCLUDE_OPTIONS = @SICSTUS_PROLOG_INCLUDE_OPTIONS@
STRIP = @STRIP@
SWI_PROLOG = @SWI_PROLOG@
SWI_PROLOG_INCLUDE_OPTIONS = @SWI_PROLOG_INCLUDE_OPTIONS@
SWI_PROLOG_LD = @SWI_PROLOG_LD@
SWI_PROLOG_LD_OPTIONS = @SWI_PROLOG_LD_OPTIONS@
TEXT_MD5SUM = @TEXT_MD5SUM@
VALGRIND = @VALGRIND@
VERSION = @VERSION@
XSB_PROLOG_INCLUDE_OPTIONS = @XSB_PROLOG_INCLUDE_OPTIONS@
YAP_PROLOG = @YAP_PROLOG@
YAP_PROLOG_INCLUDE_OPTIONS = @YAP_PROLOG_INCLUDE_OPTIONS@
YAP_PROLOG_LD_OPTIONS = @YAP_PROLOG_LD_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
ciao_prolog = @ciao_prolog@
coefficient_mnemonic = @coefficient_mnemonic@
datadir = @datadir@
datarootdir = @datarootdir@
debug_flag = @debug_flag@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
extra_includes = @extra_includes@
extra_libraries = @extra_libraries@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mlgmp_dir = @mlgmp_dir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
required_instantiations = @required_instantiations@
required_instantiations_c_cxx_headers = @required_instantiations_c_cxx_headers@
required_instantiations_c_cxx_objects = @required_instantiations_c_cxx_objects@
required_instantiations_c_cxx_sources = @required_instantiations_c_cxx_sources@
required_instantiations_canonical_names = @required_instantiations_canonical_names@
required_instantiations_java_classes = @required_instantiations_java_classes@
required_instantiations_java_cxx_headers = @required_instantiations_java_cxx_headers@
required_instantiations_java_cxx_headers_sources = @required_instantiations_java_cxx_headers_sources@
required_instantiations_java_cxx_objects = @required_instantiations_java_cxx_objects@
required_instantiations_java_cxx_sources = @required_instantiations_java_cxx_sources@
required_instantiations_java_sources = @required_instantiations_java_sources@
required_instantiations_ocaml_cxx_headers = @required_instantiations_ocaml_cxx_headers@
required_instantiations_ocaml_cxx_objects = @required_instantiations_ocaml_cxx_objects@
required_instantiations_ocaml_cxx_sources = @required_instantiations_ocaml_cxx_sources@
required_instantiations_prolog_cxx_headers = @required_instantiations_prolog_cxx_headers@
required_instantiations_prolog_cxx_objects = @required_instantiations_prolog_cxx_objects@
required_instantiations_prolog_cxx_sources = @required_instantiations_prolog_cxx_sources@
required_instantiations_prolog_generated_test_sources = @required_instantiations_prolog_generated_test_sources@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sicstus_prolog = @sicstus_prolog@
srcdir = @srcdir@
swi_prolog = @swi_prolog@
swi_prolog_ld = @swi_prolog_ld@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
uudecode = @uudecode@
xsb_prolog = @xsb_prolog@
yap_prolog = @yap_prolog@
@VALGRIND_TESTS_ENABLED_FALSE@CHECKER = 
@VALGRIND_TESTS_ENABLED_TRUE@CHECKER = \
@VALGRIND_TESTS_ENABLED_TRUE@libtool --mode=execute \
@VALGRIND_TESTS_ENABLED_TRUE@$(VALGRIND) --tool=memcheck -q --trace-children=yes --leak-check=yes \
@VALGRIND_TESTS_ENABLED_TRUE@--num-callers=40 --leak-resolution=high \
@VALGRIND_TESTS_ENABLED_TRUE@--suppressions=$(top_srcdir)/tests/valgrind_suppressions

TESTS_ENVIRONMENT = $(CHECKER)
AM_CPPFLAGS = \
-I$(top_builddir)/src \
-I$(top_srcdir)/src -I$(top_srcdir)/tests \
-I$(top_srcdir)/utils \
@extra_includes@ \
@debug_flag@

LDADD = \
$(top_builddir)/utils/libppl_utils.a \
$(top_builddir)/tests/libppl_tests.a \
$(top_builddir)/src/libppl.la \
@extra_libraries@


#
# Sources for the tests
#
addcongruences1_SOURCES = addcongruences1.cc
addconstraints1_SOURCES = addconstraints1.cc
affinedimension1_SOURCES = affinedimension1.cc
affineimage1_SOURCES = affineimage1.cc
affinepreimage1_SOURCES = affinepreimage1.cc
bounded1_SOURCES = bounded1.cc
bounds1_SOURCES = bounds1.cc
closed1_SOURCES = closed1.cc
closure1_SOURCES = closure1.cc
collapse1_SOURCES = collapse1.cc
concatenate1_SOURCES = concatenate1.cc
contains1_SOURCES = contains1.cc
containsintegerpoint1_SOURCES = containsintegerpoint1.cc
difference1_SOURCES = difference1.cc
discrete1_SOURCES = discrete1.cc
disjoint1_SOURCES = disjoint1.cc
disjunct1_SOURCES = disjunct1.cc
empty1_SOURCES = empty1.cc
entails1_SOURCES = entails1.cc
equals1_SOURCES = equals1.cc
frombdshape1_SOURCES = frombdshape1.cc
frombox1_SOURCES = frombox1.cc
fromcongruences1_SOURCES = fromcongruences1.cc
fromconstraints1_SOURCES = fromconstraints1.cc
fromgrid1_SOURCES = fromgrid1.cc
fromoctagonalshape1_SOURCES = fromoctagonalshape1.cc
frompolyhedron1_SOURCES = frompolyhedron1.cc
fromspacedimension1_SOURCES = fromspacedimension1.cc
intersection1_SOURCES = intersection1.cc
maxmin1_SOURCES = maxmin1.cc
meet1_SOURCES = meet1.cc
membytes1_SOURCES = membytes1.cc
powerset1_SOURCES = powerset1.cc
reduce1_SOURCES = reduce1.cc
refinewith1_SOURCES = refinewith1.cc
relationwith1_SOURCES = relationwith1.cc
simplifyusingcontext1_SOURCES = simplifyusingcontext1.cc
size1_SOURCES = size1.cc
spacedims1_SOURCES = spacedims1.cc
universe1_SOURCES = universe1.cc
upperbound1_SOURCES = upperbound1.cc
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Powerset/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Powerset/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

addcongruences1$(EXEEXT): $(addcongruences1_OBJECTS) $(addcongruences1_DEPENDENCIES) $(EXTRA_addcongruences1_DEPENDENCIES) 
	@rm -f addcongruences1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addcongruences1_OBJECTS) $(addcongruences1_LDADD) $(LIBS)

addconstraints1$(EXEEXT): $(addconstraints1_OBJECTS) $(addconstraints1_DEPENDENCIES) $(EXTRA_addconstraints1_DEPENDENCIES) 
	@rm -f addconstraints1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addconstraints1_OBJECTS) $(addconstraints1_LDADD) $(LIBS)

affinedimension1$(EXEEXT): $(affinedimension1_OBJECTS) $(affinedimension1_DEPENDENCIES) $(EXTRA_affinedimension1_DEPENDENCIES) 
	@rm -f affinedimension1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affinedimension1_OBJECTS) $(affinedimension1_LDADD) $(LIBS)

affineimage1$(EXEEXT): $(affineimage1_OBJECTS) $(affineimage1_DEPENDENCIES) $(EXTRA_affineimage1_DEPENDENCIES) 
	@rm -f affineimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affineimage1_OBJECTS) $(affineimage1_LDADD) $(LIBS)

affinepreimage1$(EXEEXT): $(affinepreimage1_OBJECTS) $(affinepreimage1_DEPENDENCIES) $(EXTRA_affinepreimage1_DEPENDENCIES) 
	@rm -f affinepreimage1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(affinepreimage1_OBJECTS) $(affinepreimage1_LDADD) $(LIBS)

bounded1$(EXEEXT): $(bounded1_OBJECTS) $(bounded1_DEPENDENCIES) $(EXTRA_bounded1_DEPENDENCIES) 
	@rm -f bounded1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bounded1_OBJECTS) $(bounded1_LDADD) $(LIBS)

bounds1$(EXEEXT): $(bounds1_OBJECTS) $(bounds1_DEPENDENCIES) $(EXTRA_bounds1_DEPENDENCIES) 
	@rm -f bounds1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bounds1_OBJECTS) $(bounds1_LDADD) $(LIBS)

closed1$(EXEEXT): $(closed1_OBJECTS) $(closed1_DEPENDENCIES) $(EXTRA_closed1_DEPENDENCIES) 
	@rm -f closed1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(closed1_OBJECTS) $(closed1_LDADD) $(LIBS)

closure1$(EXEEXT): $(closure1_OBJECTS) $(closure1_DEPENDENCIES) $(EXTRA_closure1_DEPENDENCIES) 
	@rm -f closure1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(closure1_OBJECTS) $(closure1_LDADD) $(LIBS)

collapse1$(EXEEXT): $(collapse1_OBJECTS) $(collapse1_DEPENDENCIES) $(EXTRA_collapse1_DEPENDENCIES) 
	@rm -f collapse1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(collapse1_OBJECTS) $(collapse1_LDADD) $(LIBS)

concatenate1$(EXEEXT): $(concatenate1_OBJECTS) $(concatenate1_DEPENDENCIES) $(EXTRA_concatenate1_DEPENDENCIES) 
	@rm -f concatenate1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(concatenate1_OBJECTS) $(concatenate1_LDADD) $(LIBS)

contains1$(EXEEXT): $(contains1_OBJECTS) $(contains1_DEPENDENCIES) $(EXTRA_contains1_DEPENDENCIES) 
	@rm -f contains1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(contains1_OBJECTS) $(contains1_LDADD) $(LIBS)

containsintegerpoint1$(EXEEXT): $(containsintegerpoint1_OBJECTS) $(containsintegerpoint1_DEPENDENCIES) $(EXTRA_containsintegerpoint1_DEPENDENCIES) 
	@rm -f containsintegerpoint1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(containsintegerpoint1_OBJECTS) $(containsintegerpoint1_LDADD) $(LIBS)

difference1$(EXEEXT): $(difference1_OBJECTS) $(difference1_DEPENDENCIES) $(EXTRA_difference1_DEPENDENCIES) 
	@rm -f difference1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(difference1_OBJECTS) $(difference1_LDADD) $(LIBS)

discrete1$(EXEEXT): $(discrete1_OBJECTS) $(discrete1_DEPENDENCIES) $(EXTRA_discrete1_DEPENDENCIES) 
	@rm -f discrete1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(discrete1_OBJECTS) $(discrete1_LDADD) $(LIBS)

disjoint1$(EXEEXT): $(disjoint1_OBJECTS) $(disjoint1_DEPENDENCIES) $(EXTRA_disjoint1_DEPENDENCIES) 
	@rm -f disjoint1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(disjoint1_OBJECTS) $(disjoint1_LDADD) $(LIBS)

disjunct1$(EXEEXT): $(disjunct1_OBJECTS) $(disjunct1_DEPENDENCIES) $(EXTRA_disjunct1_DEPENDENCIES) 
	@rm -f disjunct1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(disjunct1_OBJECTS) $(disjunct1_LDADD) $(LIBS)

empty1$(EXEEXT): $(empty1_OBJECTS) $(empty1_DEPENDENCIES) $(EXTRA_empty1_DEPENDENCIES) 
	@rm -f empty1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(empty1_OBJECTS) $(empty1_LDADD) $(LIBS)

entails1$(EXEEXT): $(entails1_OBJECTS) $(entails1_DEPENDENCIES) $(EXTRA_entails1_DEPENDENCIES) 
	@rm -f entails1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(entails1_OBJECTS) $(entails1_LDADD) $(LIBS)

equals1$(EXEEXT): $(equals1_OBJECTS) $(equals1_DEPENDENCIES) $(EXTRA_equals1_DEPENDENCIES) 
	@rm -f equals1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(equals1_OBJECTS) $(equals1_LDADD) $(LIBS)

frombdshape1$(EXEEXT): $(frombdshape1_OBJECTS) $(frombdshape1_DEPENDENCIES) $(EXTRA_frombdshape1_DEPENDENCIES) 
	@rm -f frombdshape1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(frombdshape1_OBJECTS) $(frombdshape1_LDADD) $(LIBS)

frombox1$(EXEEXT): $(frombox1_OBJECTS) $(frombox1_DEPENDENCIES) $(EXTRA_frombox1_DEPENDENCIES) 
	@rm -f frombox1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(frombox1_OBJECTS) $(frombox1_LDADD) $(LIBS)

fromcongruences1$(EXEEXT): $(fromcongruences1_OBJECTS) $(fromcongruences1_DEPENDENCIES) $(EXTRA_fromcongruences1_DEPENDENCIES) 
	@rm -f fromcongruences1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fromcongruences1_OBJECTS) $(fromcongruences1_LDADD) $(LIBS)

fromconstraints1$(EXEEXT): $(fromconstraints1_OBJECTS) $(fromconstraints1_DEPENDENCIES) $(EXTRA_fromconstraints1_DEPENDENCIES) 
	@rm -f fromconstraints1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fromconstraints1_OBJECTS) $(fromconstraints1_LDADD) $(LIBS)

fromgrid1$(EXEEXT): $(fromgrid1_OBJECTS) $(fromgrid1_DEPENDENCIES) $(EXTRA_fromgrid1_DEPENDENCIES) 
	@rm -f fromgrid1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fromgrid1_OBJECTS) $(fromgrid1_LDADD) $(LIBS)

fromoctagonalshape1$(EXEEXT): $(fromoctagonalshape1_OBJECTS) $(fromoctagonalshape1_DEPENDENCIES) $(EXTRA_fromoctagonalshape1_DEPENDENCIES) 
	@rm -f fromoctagonalshape1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fromoctagonalshape1_OBJECTS) $(fromoctagonalshape1_LDADD) $(LIBS)

frompolyhedron1$(EXEEXT): $(frompolyhedron1_OBJECTS) $(frompolyhedron1_DEPENDENCIES) $(EXTRA_frompolyhedron1_DEPENDENCIES) 
	@rm -f frompolyhedron1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(frompolyhedron1_OBJECTS) $(frompolyhedron1_LDADD) $(LIBS)

fromspacedimension1$(EXEEXT): $(fromspacedimension1_OBJECTS) $(fromspacedimension1_DEPENDENCIES) $(EXTRA_fromspacedimension1_DEPENDENCIES) 
	@rm -f fromspacedimension1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fromspacedimension1_OBJECTS) $(fromspacedimension1_LDADD) $(LIBS)

intersection1$(EXEEXT): $(intersection1_OBJECTS) $(intersection1_DEPENDENCIES) $(EXTRA_intersection1_DEPENDENCIES) 
	@rm -f intersection1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(intersection1_OBJECTS) $(intersection1_LDADD) $(LIBS)

maxmin1$(EXEEXT): $(maxmin1_OBJECTS) $(maxmin1_DEPENDENCIES) $(EXTRA_maxmin1_DEPENDENCIES) 
	@rm -f maxmin1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(maxmin1_OBJECTS) $(maxmin1_LDADD) $(LIBS)

meet1$(EXEEXT): $(meet1_OBJECTS) $(meet1_DEPENDENCIES) $(EXTRA_meet1_DEPENDENCIES) 
	@rm -f meet1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(meet1_OBJECTS) $(meet1_LDADD) $(LIBS)

membytes1$(EXEEXT): $(membytes1_OBJECTS) $(membytes1_DEPENDENCIES) $(EXTRA_membytes1_DEPENDENCIES) 
	@rm -f membytes1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(membytes1_OBJECTS) $(membytes1_LDADD) $(LIBS)

powerset1$(EXEEXT): $(powerset1_OBJECTS) $(powerset1_DEPENDENCIES) $(EXTRA_powerset1_DEPENDENCIES) 
	@rm -f powerset1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(powerset1_OBJECTS) $(powerset1_LDADD) $(LIBS)

reduce1$(EXEEXT): $(reduce1_OBJECTS) $(reduce1_DEPENDENCIES) $(EXTRA_reduce1_DEPENDENCIES) 
	@rm -f reduce1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reduce1_OBJECTS) $(reduce1_LDADD) $(LIBS)

refinewith1$(EXEEXT): $(refinewith1_OBJECTS) $(refinewith1_DEPENDENCIES) $(EXTRA_refinewith1_DEPENDENCIES) 
	@rm -f refinewith1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(refinewith1_OBJECTS) $(refinewith1_LDADD) $(LIBS)

relationwith1$(EXEEXT): $(relationwith1_OBJECTS) $(relationwith1_DEPENDENCIES) $(EXTRA_relationwith1_DEPENDENCIES) 
	@rm -f relationwith1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(relationwith1_OBJECTS) $(relationwith1_LDADD) $(LIBS)

simplifyusingcontext1$(EXEEXT): $(simplifyusingcontext1_OBJECTS) $(simplifyusingcontext1_DEPENDENCIES) $(EXTRA_simplifyusingcontext1_DEPENDENCIES) 
	@rm -f simplifyusingcontext1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(simplifyusingcontext1_OBJECTS) $(simplifyusingcontext1_LDADD) $(LIBS)

size1$(EXEEXT): $(size1_OBJECTS) $(size1_DEPENDENCIES) $(EXTRA_size1_DEPENDENCIES) 
	@rm -f size1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(size1_OBJECTS) $(size1_LDADD) $(LIBS)

spacedims1$(EXEEXT): $(spacedims1_OBJECTS) $(spacedims1_DEPENDENCIES) $(EXTRA_spacedims1_DEPENDENCIES) 
	@rm -f spacedims1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(spacedims1_OBJECTS) $(spacedims1_LDADD) $(LIBS)

universe1$(EXEEXT): $(universe1_OBJECTS) $(universe1_DEPENDENCIES) $(EXTRA_universe1_DEPENDENCIES) 
	@rm -f universe1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(universe1_OBJECTS) $(universe1_LDADD) $(LIBS)

upperbound1$(EXEEXT): $(upperbound1_OBJECTS) $(upperbound1_DEPENDENCIES) $(EXTRA_upperbound1_DEPENDENCIES) 
	@rm -f upperbound1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(upperbound1_OBJECTS) $(upperbound1_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addcongruences1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addconstraints1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/affinedimension1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/affineimage1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/affinepreimage1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bounded1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bounds1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/closed1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/closure1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collapse1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/concatenate1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contains1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/containsintegerpoint1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/difference1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/discrete1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/disjoint1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/disjunct1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empty1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entails1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equals1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frombdshape1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frombox1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fromcongruences1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fromconstraints1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fromgrid1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fromoctagonalshape1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frompolyhedron1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fromspacedimension1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/intersection1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/maxmin1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/meet1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/membytes1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/powerset1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reduce1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/refinewith1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/relationwith1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simplifyusingcontext1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/size1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spacedims1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/universe1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/upperbound1.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
addcongruences1.log: addcongruences1$(EXEEXT)
	@p='addcongruences1$(EXEEXT)'; \
	b='addcongruences1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addconstraints1.log: addconstraints1$(EXEEXT)
	@p='addconstraints1$(EXEEXT)'; \
	b='addconstraints1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affinedimension1.log: affinedimension1$(EXEEXT)
	@p='affinedimension1$(EXEEXT)'; \
	b='affinedimension1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affineimage1.log: affineimage1$(EXEEXT)
	@p='affineimage1$(EXEEXT)'; \
	b='affineimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
affinepreimage1.log: affinepreimage1$(EXEEXT)
	@p='affinepreimage1$(EXEEXT)'; \
	b='affinepreimage1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bounded1.log: bounded1$(EXEEXT)
	@p='bounded1$(EXEEXT)'; \
	b='bounded1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bounds1.log: bounds1$(EXEEXT)
	@p='bounds1$(EXEEXT)'; \
	b='bounds1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
closed1.log: closed1$(EXEEXT)
	@p='closed1$(EXEEXT)'; \
	b='closed1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
closure1.log: closure1$(EXEEXT)
	@p='closure1$(EXEEXT)'; \
	b='closure1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
collapse1.log: collapse1$(EXEEXT)
	@p='collapse1$(EXEEXT)'; \
	b='collapse1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
concatenate1.log: concatenate1$(EXEEXT)
	@p='concatenate1$(EXEEXT)'; \
	b='concatenate1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
contains1.log: contains1$(EXEEXT)
	@p='contains1$(EXEEXT)'; \
	b='contains1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
containsintegerpoint1.log: containsintegerpoint1$(EXEEXT)
	@p='containsintegerpoint1$(EXEEXT)'; \
	b='containsintegerpoint1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
difference1.log: difference1$(EXEEXT)
	@p='difference1$(EXEEXT)'; \
	b='difference1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
discrete1.log: discrete1$(EXEEXT)
	@p='discrete1$(EXEEXT)'; \
	b='discrete1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disjoint1.log: disjoint1$(EXEEXT)
	@p='disjoint1$(EXEEXT)'; \
	b='disjoint1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disjunct1.log: disjunct1$(EXEEXT)
	@p='disjunct1$(EXEEXT)'; \
	b='disjunct1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
empty1.log: empty1$(EXEEXT)
	@p='empty1$(EXEEXT)'; \
	b='empty1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
entails1.log: entails1$(EXEEXT)
	@p='entails1$(EXEEXT)'; \
	b='entails1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
equals1.log: equals1$(EXEEXT)
	@p='equals1$(EXEEXT)'; \
	b='equals1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frombdshape1.log: frombdshape1$(EXEEXT)
	@p='frombdshape1$(EXEEXT)'; \
	b='frombdshape1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frombox1.log: frombox1$(EXEEXT)
	@p='frombox1$(EXEEXT)'; \
	b='frombox1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fromcongruences1.log: fromcongruences1$(EXEEXT)
	@p='fromcongruences1$(EXEEXT)'; \
	b='fromcongruences1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fromconstraints1.log: fromconstraints1$(EXEEXT)
	@p='fromconstraints1$(EXEEXT)'; \
	b='fromconstraints1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fromgrid1.log: fromgrid1$(EXEEXT)
	@p='fromgrid1$(EXEEXT)'; \
	b='fromgrid1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fromoctagonalshape1.log: fromoctagonalshape1$(EXEEXT)
	@p='fromoctagonalshape1$(EXEEXT)'; \
	b='fromoctagonalshape1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frompolyhedron1.log: frompolyhedron1$(EXEEXT)
	@p='frompolyhedron1$(EXEEXT)'; \
	b='frompolyhedron1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fromspacedimension1.log: fromspacedimension1$(EXEEXT)
	@p='fromspacedimension1$(EXEEXT)'; \
	b='fromspacedimension1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
intersection1.log: intersection1$(EXEEXT)
	@p='intersection1$(EXEEXT)'; \
	b='intersection1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
maxmin1.log: maxmin1$(EXEEXT)
	@p='maxmin1$(EXEEXT)'; \
	b='maxmin1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
meet1.log: meet1$(EXEEXT)
	@p='meet1$(EXEEXT)'; \
	b='meet1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
membytes1.log: membytes1$(EXEEXT)
	@p='membytes1$(EXEEXT)'; \
	b='membytes1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
powerset1.log: powerset1$(EXEEXT)
	@p='powerset1$(EXEEXT)'; \
	b='powerset1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
reduce1.log: reduce1$(EXEEXT)
	@p='reduce1$(EXEEXT)'; \
	b='reduce1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
refinewith1.log: refinewith1$(EXEEXT)
	@p='refinewith1$(EXEEXT)'; \
	b='refinewith1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
relationwith1.log: relationwith1$(EXEEXT)
	@p='relationwith1$(EXEEXT)'; \
	b='relationwith1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
simplifyusingcontext1.log: simplifyusingcontext1$(EXEEXT)
	@p='simplifyusingcontext1$(EXEEXT)'; \
	b='simplifyusingcontext1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
size1.log: size1$(EXEEXT)
	@p='size1$(EXEEXT)'; \
	b='size1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spacedims1.log: spacedims1$(EXEEXT)
	@p='spacedims1$(EXEEXT)'; \
	b='spacedims1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
universe1.log: universe1$(EXEEXT)
	@p='universe1$(EXEEXT)'; \
	b='universe1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
upperbound1.log: upperbound1$(EXEEXT)
	@p='upperbound1$(EXEEXT)'; \
	b='upperbound1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/addcongruences1.Po
	-rm -f ./$(DEPDIR)/addconstraints1.Po
	-rm -f ./$(DEPDIR)/affinedimension1.Po
	-rm -f ./$(DEPDIR)/affineimage1.Po
	-rm -f ./$(DEPDIR)/affinepreimage1.Po
	-rm -f ./$(DEPDIR)/bounded1.Po
	-rm -f ./$(DEPDIR)/bounds1.Po
	-rm -f ./$(DEPDIR)/closed1.Po
	-rm -f ./$(DEPDIR)/closure1.Po
	-rm -f ./$(DEPDIR)/collapse1.Po
	-rm -f ./$(DEPDIR)/concatenate1.Po
	-rm -f ./$(DEPDIR)/contains1.Po
	-rm -f ./$(DEPDIR)/containsintegerpoint1.Po
	-rm -f ./$(DEPDIR)/difference1.Po
	-rm -f ./$(DEPDIR)/discrete1.Po
	-rm -f ./$(DEPDIR)/disjoint1.Po
	-rm -f ./$(DEPDIR)/disjunct1.Po
	-rm -f ./$(DEPDIR)/empty1.Po
	-rm -f ./$(DEPDIR)/entails1.Po
	-rm -f ./$(DEPDIR)/equals1.Po
	-rm -f ./$(DEPDIR)/frombdshape1.Po
	-rm -f ./$(DEPDIR)/frombox1.Po
	-rm -f ./$(DEPDIR)/fromcongruences1.Po
	-rm -f ./$(DEPDIR)/fromconstraints1.Po
	-rm -f ./$(DEPDIR)/fromgrid1.Po
	-rm -f ./$(DEPDIR)/fromoctagonalshape1.Po
	-rm -f ./$(DEPDIR)/frompolyhedron1.Po
	-rm -f ./$(DEPDIR)/fromspacedimension1.Po
	-rm -f ./$(DEPDIR)/intersection1.Po
	-rm -f ./$(DEPDIR)/maxmin1.Po
	-rm -f ./$(DEPDIR)/meet1.Po
	-rm -f ./$(DEPDIR)/membytes1.Po
	-rm -f ./$(DEPDIR)/powerset1.Po
	-rm -f ./$(DEPDIR)/reduce1.Po
	-rm -f ./$(DEPDIR)/refinewith1.Po
	-rm -f ./$(DEPDIR)/relationwith1.Po
	-rm -f ./$(DEPDIR)/simplifyusingcontext1.Po
	-rm -f ./$(DEPDIR)/size1.Po
	-rm -f ./$(DEPDIR)/spacedims1.Po
	-rm -f ./$(DEPDIR)/universe1.Po
	-rm -f ./$(DEPDIR)/upperbound1.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/addcongruences1.Po
	-rm -f ./$(DEPDIR)/addconstraints1.Po
	-rm -f ./$(DEPDIR)/affinedimension1.Po
	-rm -f ./$(DEPDIR)/affineimage1.Po
	-rm -f ./$(DEPDIR)/affinepreimage1.Po
	-rm -f ./$(DEPDIR)/bounded1.Po
	-rm -f ./$(DEPDIR)/bounds1.Po
	-rm -f ./$(DEPDIR)/closed1.Po
	-rm -f ./$(DEPDIR)/closure1.Po
	-rm -f ./$(DEPDIR)/collapse1.Po
	-rm -f ./$(DEPDIR)/concatenate1.Po
	-rm -f ./$(DEPDIR)/contains1.Po
	-rm -f ./$(DEPDIR)/containsintegerpoint1.Po
	-rm -f ./$(DEPDIR)/difference1.Po
	-rm -f ./$(DEPDIR)/discrete1.Po
	-rm -f ./$(DEPDIR)/disjoint1.Po
	-rm -f ./$(DEPDIR)/disjunct1.Po
	-rm -f ./$(DEPDIR)/empty1.Po
	-rm -f ./$(DEPDIR)/entails1.Po
	-rm -f ./$(DEPDIR)/equals1.Po
	-rm -f ./$(DEPDIR)/frombdshape1.Po
	-rm -f ./$(DEPDIR)/frombox1.Po
	-rm -f ./$(DEPDIR)/fromcongruences1.Po
	-rm -f ./$(DEPDIR)/fromconstraints1.Po
	-rm -f ./$(DEPDIR)/fromgrid1.Po
	-rm -f ./$(DEPDIR)/fromoctagonalshape1.Po
	-rm -f ./$(DEPDIR)/frompolyhedron1.Po
	-rm -f ./$(DEPDIR)/fromspacedimension1.Po
	-rm -f ./$(DEPDIR)/intersection1.Po
	-rm -f ./$(DEPDIR)/maxmin1.Po
	-rm -f ./$(DEPDIR)/meet1.Po
	-rm -f ./$(DEPDIR)/membytes1.Po
	-rm -f ./$(DEPDIR)/powerset1.Po
	-rm -f ./$(DEPDIR)/reduce1.Po
	-rm -f ./$(DEPDIR)/refinewith1.Po
	-rm -f ./$(DEPDIR)/relationwith1.Po
	-rm -f ./$(DEPDIR)/simplifyusingcontext1.Po
	-rm -f ./$(DEPDIR)/size1.Po
	-rm -f ./$(DEPDIR)/spacedims1.Po
	-rm -f ./$(DEPDIR)/universe1.Po
	-rm -f ./$(DEPDIR)/upperbound1.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


$(top_builddir)/utils/libppl_utils.a:
	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/utils libppl_utils.a

$(top_builddir)/tests/libppl_tests.a:
	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/tests libppl_tests.a

$(top_builddir)/src/libppl.la:
	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/src libppl.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
